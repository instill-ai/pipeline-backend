syntax = "proto3";

package core.mgmt.v1beta;

// Google API
import "google/api/field_behavior.proto";
// Protobuf standard
import "google/protobuf/timestamp.proto";

// Mode describes the execution mode of the pipeline (sync or async).
enum Mode {
  // Unspecified.
  MODE_UNSPECIFIED = 0;
  // Synchronous (result is returned in the response).
  MODE_SYNC = 1;
  // Asynchronous (response only contains acknowledgement).
  MODE_ASYNC = 2;
}

// Status describes the output of an execution.
enum Status {
  // Unspecified.
  STATUS_UNSPECIFIED = 0;
  // Successfully completed.
  STATUS_COMPLETED = 1;
  // Finished with error.
  STATUS_ERRORED = 2;
}

// TriggerCount represents a execution count with some
// aggregation params (e.g. trigger status).
message TriggerCount {
  // Number of triggers.
  int32 trigger_count = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // This field will be present when results are grouped by trigger status.
  optional Status status = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// GetPipelineTriggerCountRequest represents a request to fetch the trigger
// count of a requester over a time period.
message GetPipelineTriggerCountRequest {
  // The ID of the namespace that requested the pipeline triggers.
  string requester_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Beginning of the time range from which the records will be fetched.
  // The default value is the beginning of the current day, in UTC.
  optional google.protobuf.Timestamp start = 2;
  // End of the time range from which the records will be fetched.
  // The default value is the current timestamp.
  optional google.protobuf.Timestamp stop = 3;
}

// GetPipelineTriggerCountResponse contains the trigger count, grouped by
// trigger status.
message GetPipelineTriggerCountResponse {
  // The trigger counts, grouped by status.
  repeated TriggerCount pipeline_trigger_counts = 1;
}

// GetModelTriggerCountRequest represents a request to fetch the trigger
// count of a requester over a time period.
message GetModelTriggerCountRequest {
  // The ID of the requester that triggered the model.
  string requester_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Beginning of the time range from which the records will be fetched.
  // The default value is the beginning of the current day, in UTC.
  optional google.protobuf.Timestamp start = 2;
  // End of the time range from which the records will be fetched.
  // The default value is the current timestamp.
  optional google.protobuf.Timestamp stop = 3;
}

// GetModelTriggerCountResponse contains the trigger count, grouped by
// trigger status.
message GetModelTriggerCountResponse {
  // The trigger counts, grouped by status.
  repeated TriggerCount model_trigger_counts = 1;
}

// PipelineTriggerChartRecord represents a timeline of pipeline triggers. It
// contains a collection of (timestamp, count) pairs that represent the total
// pipeline triggers in a given time bucket.
// pipeline ID and time frame.
message PipelineTriggerChartRecord {
  // This field will be present present when the information is grouped by pipeline.
  optional string pipeline_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Time buckets.
  repeated google.protobuf.Timestamp time_buckets = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Aggregated trigger count in each time bucket.
  repeated int32 trigger_counts = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The ID of the namespace that requested the pipeline triggers.
  string requester_id = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListPipelineTriggerChartRecordsRequest represents a request to list pipeline
// trigger chart records for a given requester, grouped by time buckets.
message ListPipelineTriggerChartRecordsRequest {
  // The ID of the namespace that requested the pipeline triggers.
  string requester_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Aggregation window. The value is a positive duration string, i.e. a
  // sequence of decimal numbers, each with optional fraction and a unit
  // suffix, such as "300ms", "1.5h" or "2h45m".
  // The minimum (and default) window is 1h.
  optional string aggregation_window = 2;
  // Beginning of the time range from which the records will be fetched.
  // The default value is the beginning of the current day, in UTC.
  optional google.protobuf.Timestamp start = 3;
  // End of the time range from which the records will be fetched.
  // The default value is the current timestamp.
  optional google.protobuf.Timestamp stop = 4;
}

// ListPipelineTriggerChartRecordsResponse contains a list of pipeline trigger
// chart records.
message ListPipelineTriggerChartRecordsResponse {
  // Pipeline trigger counts. Until we allow filtering or grouping by fields
  // like pipeline ID, this list will contain only one element with the
  // timeline of trigger counts for a given requester, regardless the pipeline
  // ID, trigger mode, final status or other fields.
  repeated PipelineTriggerChartRecord pipeline_trigger_chart_records = 1;
}

// ModelTriggerChartRecord represents a timeline of model triggers. It
// contains a collection of (timestamp, count) pairs that represent the total
// model triggers in a given time bucket.
message ModelTriggerChartRecord {
  // This field will be present present when the information is grouped by model.
  optional string model_id = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Time buckets.
  repeated google.protobuf.Timestamp time_buckets = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Aggregated trigger count in each time bucket.
  repeated int32 trigger_counts = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The ID of the namespace that requested the model triggers.
  string requester_id = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListModelTriggerChartRecordsRequest represents a request to list model
// trigger metrics, aggregated by model ID and time frame.
message ListModelTriggerChartRecordsRequest {
  // The ID of the namespace that requested the model triggers.
  string requester_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Aggregation window. The value is a positive duration string, i.e. a
  // sequence of decimal numbers, each with optional fraction and a unit
  // suffix, such as "300ms", "1.5h" or "2h45m".
  // The minimum (and default) window is 1h.
  optional string aggregation_window = 2;
  // Beginning of the time range from which the records will be fetched.
  // The default value is the beginning of the current day, in UTC.
  optional google.protobuf.Timestamp start = 3;
  // End of the time range from which the records will be fetched.
  // The default value is the current timestamp.
  optional google.protobuf.Timestamp stop = 4;
}

// ListModelTriggerChartRecordsResponse contains a list of model trigger
// chart records.
message ListModelTriggerChartRecordsResponse {
  // Model trigger counts. Until we allow filtering or grouping by fields
  // like model ID, this list will contain only one element with the
  // timeline of trigger counts for a given requester, regardless the model
  // ID, trigger mode, final status or other fields.
  repeated ModelTriggerChartRecord model_trigger_chart_records = 1;
}

// CreditConsumptionChartRecord represents a timeline of Instill Credit
// consumption. It contains a collection of (timestamp, amount) pairs that
// represent the total credit consumption in a given time bucket.
message CreditConsumptionChartRecord {
  // The ID of the namespace that owns the credit.
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Time buckets.
  repeated google.protobuf.Timestamp time_buckets = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Total credit consumed in each time bucket.
  repeated float amount = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Credit consumption source (e.g. "pipeline", "model").
  string source = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListCreditConsumptionChartRecordsRequest represents a request to list credit
// consumption chart records for a given owner, grouped by time buckets and
// consumption sources.
message ListCreditConsumptionChartRecordsRequest {
  // The ID of the namespace that owns the credit.
  string namespace_id = 1 [(google.api.field_behavior) = REQUIRED];
  // Aggregation window. The value is a positive duration string, i.e. a
  // sequence of decimal numbers, each with optional fraction and a unit
  // suffix, such as "300ms", "1.5h" or "2h45m".
  // The minimum (and default) window is 1h.
  optional string aggregation_window = 2;
  // Beginning of the time range from which the records will be fetched.
  // The default value is the beginning of the current day, in UTC.
  optional google.protobuf.Timestamp start = 3;
  // End of the time range from which the records will be fetched.
  // The default value is the current timestamp.
  optional google.protobuf.Timestamp stop = 4;
}

// ListCreditConsumptionChartRecordsResponse contains a list of credit consumption
// chart records.
message ListCreditConsumptionChartRecordsResponse {
  // Credit consumption timelines, aggregated by source.
  repeated CreditConsumptionChartRecord credit_consumption_chart_records = 1;
  // 2 is reserved for the total amount consumed in the time range specified in
  // the request. This won't be returned anymore as we need to aggregate the
  // consumption by source.
  reserved 2;
}

// =============================================================================
// Deprecated messages, to be removed with the new dashboard implementation.
// =============================================================================

// PipelineTriggerTableRecord contains pipeline trigger metrics, aggregated by
// pipeline ID.
message PipelineTriggerTableRecord {
  // Pipeline ID.
  string pipeline_id = 1;
  // Pipeline UUID.
  string pipeline_uid = 2;
  // Number of triggers with `STATUS_COMPLETED`.
  int32 trigger_count_completed = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Number of triggers with `STATUS_ERRORED`.
  int32 trigger_count_errored = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Version for the triggered pipeline if it is a release pipeline.
  string pipeline_release_id = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Release UUID for the triggered pipeline if it is a release pipeline.
  string pipeline_release_uid = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListPipelineTriggerTableRecordsRequest represents a request to list the
// pipeline triggers metrics, aggregated by pipeline ID.
message ListPipelineTriggerTableRecordsRequest {
  // The maximum number of results to return. If this parameter is unspecified,
  // at most 100 pipelines will be returned. The cap value for this parameter
  // is 1000 (i.e. any value above that will be coerced to 1000).
  optional int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token.
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
  // expression.
  // - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
  optional string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// ListPipelineTriggerTableRecordsResponse contains the pipeline metrics.
message ListPipelineTriggerTableRecordsResponse {
  // A list of pipeline trigger tables.
  repeated PipelineTriggerTableRecord pipeline_trigger_table_records = 1;
  // Next page token.
  string next_page_token = 2;
  // Total number of pipeline trigger records
  int32 total_size = 3;
}

// ListPipelineTriggerChartRecordsV0Request represents a request to list
// pipeline trigger metrics, aggregated by pipeline ID and time frame.
message ListPipelineTriggerChartRecordsV0Request {
  // Aggregation window in nanoseconds.
  int32 aggregation_window = 1;
  // Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
  // expression.
  // - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
  optional string filter = 2 [(google.api.field_behavior) = OPTIONAL];
}

// ListPipelineTriggerChartRecordsV0Response contains a list of pipeline
// trigger chart records.
message ListPipelineTriggerChartRecordsV0Response {
  // A list of pipeline trigger records.
  repeated PipelineTriggerChartRecordV0 pipeline_trigger_chart_records = 1;
}

// PipelineTriggerChartRecordV0 contains pipeline trigger metrics, aggregated
// by pipeline ID and time frame.
message PipelineTriggerChartRecordV0 {
  // Pipeline ID.
  string pipeline_id = 1;
  // Pipeline UUID.
  string pipeline_uid = 2;
  // Trigger mode.
  Mode trigger_mode = 3;
  // Final status.
  Status status = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Time buckets.
  repeated google.protobuf.Timestamp time_buckets = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Aggregated trigger count in each time bucket.
  repeated int32 trigger_counts = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Total computation time duration in each time bucket.
  repeated float compute_time_duration = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Version for the triggered pipeline if it is a release pipeline.
  string pipeline_release_id = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Release UUID for the triggered pipeline if it is a release pipeline.
  string pipeline_release_uid = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// PipelineTriggerRecord represents a pipeline execution event.
message PipelineTriggerRecord {
  // The moment when the pipeline was triggered.
  google.protobuf.Timestamp trigger_time = 1;
  // UUID of the trigger.
  string pipeline_trigger_id = 2;
  // Pipeline ID.
  string pipeline_id = 3;
  // Pipeline UUID.
  string pipeline_uid = 4;
  // Trigger mode.
  Mode trigger_mode = 5;
  // Total execution duration.
  float compute_time_duration = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Final status.
  Status status = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // If a release of the pipeline was triggered, pipeline version.
  string pipeline_release_id = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // If a release of the pipeline was triggered, release UUID.
  string pipeline_release_uid = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListPipelineTriggerRecordsRequest represents a request to list the triggers
// of a pipeline.
message ListPipelineTriggerRecordsRequest {
  // The maximum number of triggers to return. If this parameter is unspecified,
  // at most 100 pipelines will be returned. The cap value for this parameter is
  // 1000 (i.e. any value above that will be coerced to 100).
  optional int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token.
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
  // expression.
  // - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
  optional string filter = 3 [(google.api.field_behavior) = OPTIONAL];
}

// ListPipelineTriggerRecordsResponse contains a list of pipeline triggers.
message ListPipelineTriggerRecordsResponse {
  // A list of pipeline triggers.
  repeated PipelineTriggerRecord pipeline_trigger_records = 1;
  // Next page token.
  string next_page_token = 2;
  // Total number of pipeline triggers.
  int32 total_size = 3;
}
