syntax = "proto3";

package vdp.connector.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "../../../vdp/connector/v1alpha/connector.proto";
import "../../../vdp/connector/v1alpha/connector_definition.proto";

// Connector service responds to external access
service ConnectorPublicService {
  option (google.api.default_host) = "api.instill.tech";

  /////////////////////////////////
  // Connector definition methods
  /////////////////////////////////

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/connector"}]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {get: "/v1alpha/__readiness"};
  }

  // ListConnectorDefinitions method receives a
  // ListConnectorDefinitionsRequest message and returns a
  // ListConnectorDefinitionsResponse message.
  rpc ListConnectorDefinitions(ListConnectorDefinitionsRequest) returns (ListConnectorDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/connector-definitions"};
  }

  // GetConnectorDefinition method receives a
  // GetConnectorDefinitionRequest message and returns a
  // GetGetConnectorDefinitionResponse message.
  rpc GetConnectorDefinition(GetConnectorDefinitionRequest) returns (GetConnectorDefinitionResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=connector-definitions/*}"};
    option (google.api.method_signature) = "name";
  }

  /////////////////////////////////
  // Connector-Resource methods
  /////////////////////////////////

  // CreateConnectorResource method receives a
  // CreateConnectorResourceRequest message and returns a
  // CreateConnectorResourceResponse message.
  rpc CreateConnectorResource(CreateConnectorResourceRequest) returns (CreateConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/connector-resources"
      body: "connector_resource"
    };
    option (google.api.method_signature) = "connector_resource";
  }

  // ListConnectorResources method receives a
  // ListConnectorResourcesRequest message and returns a
  // ListConnectorResourcesResponse message.
  rpc ListConnectorResources(ListConnectorResourcesRequest) returns (ListConnectorResourcesResponse) {
    option (google.api.http) = {get: "/v1alpha/connector-resources"};
  }

  // GetConnectorResource method receives a GetConnectorResourceRequest
  // message and returns a GetConnectorResourceResponse message.
  rpc GetConnectorResource(GetConnectorResourceRequest) returns (GetConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=connector-resources/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdateConnectorResource method receives a
  // UpdateConnectorResourceRequest message and returns a
  // UpdateConnectorResourceResponse message.
  rpc UpdateConnectorResource(UpdateConnectorResourceRequest) returns (UpdateConnectorResourceResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{connector_resource.name=connector-resources/*}"
      body: "connector_resource"
    };
    option (google.api.method_signature) = "connector_resource,update_mask";
  }

  // DeleteConnectorResource method receives a
  // DeleteConnectorResourceRequest message and returns a
  // DeleteConnectorResourceResponse message.
  rpc DeleteConnectorResource(DeleteConnectorResourceRequest) returns (DeleteConnectorResourceResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=connector-resources/*}"};
    option (google.api.method_signature) = "name";
  }

  // LookUpConnectorResource method receives a
  // LookUpConnectorResourceRequest message and returns a
  // LookUpConnectorResourceResponse
  rpc LookUpConnectorResource(LookUpConnectorResourceRequest) returns (LookUpConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{permalink=connector-resources/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // Connect a connector resource.
  // The "state" of the connector resource after connecting is "CONNECTED".
  // ConnectConnectorResource can be called on ConnectorResource in the
  // state `DISCONNECTED`; ConnectorResource in a different state (including
  // `CONNECTED`) returns an error.
  rpc ConnectConnectorResource(ConnectConnectorResourceRequest) returns (ConnectConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=connector-resources/*}/connect"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // Disconnect a connectorResource.
  // The "state" of the connectorResource after disconnecting is "DISCONNECTED".
  // DisconnectConnectorResource can be called on ConnectorResource in the
  // state `CONNECTED`; ConnectorResource in a different state (including
  // `DISCONNECTED`) returns an error.
  rpc DisconnectConnectorResource(DisconnectConnectorResourceRequest) returns (DisconnectConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=connector-resources/*}/disconnect"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // RenameConnectorResource method receives a
  // RenameConnectorResourceRequest message and returns a
  // RenameConnectorResourceResponse message.
  rpc RenameConnectorResource(RenameConnectorResourceRequest) returns (RenameConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=connector-resources/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_connector_resource_id";
  }

  // ExecuteConnectorResource method receives a
  // ExecuteConnectorResourceRequest message and returns a
  // ExecuteConnectorResourceResponse message.
  rpc ExecuteConnectorResource(ExecuteConnectorResourceRequest) returns (ExecuteConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=connector-resources/*}/execute"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // WatchConnectorResource method receives a
  // WatchConnectorResourceRequest message and returns a
  // WatchConnectorResourceResponse
  rpc WatchConnectorResource(WatchConnectorResourceRequest) returns (WatchConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=connector-resources/*}/watch"};
    option (google.api.method_signature) = "name";
  }

  // TestConnectorResource method receives a TestConnectorResourceRequest
  // message and returns a TestConnectorResourceResponse
  rpc TestConnectorResource(TestConnectorResourceRequest) returns (TestConnectorResourceResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=connector-resources/*}/testConnection"};
    option (google.api.method_signature) = "name";
  }
}
