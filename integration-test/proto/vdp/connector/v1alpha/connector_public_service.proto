syntax = "proto3";

package vdp.connector.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "../../../vdp/connector/v1alpha/connector.proto";
import "../../../vdp/connector/v1alpha/connector_definition.proto";

// Connector service responds to external access
service ConnectorPublicService {
  option (google.api.default_host) = "api.instill.tech";

  /////////////////////////////////
  // Connector definition methods
  /////////////////////////////////

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/connector"}]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {get: "/v1alpha/__readiness"};
  }

  // ListConnectorDefinitions method receives a
  // ListConnectorDefinitionsRequest message and returns a
  // ListConnectorDefinitionsResponse message.
  rpc ListConnectorDefinitions(ListConnectorDefinitionsRequest) returns (ListConnectorDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/connector-definitions"};
  }

  // GetConnectorDefinition method receives a
  // GetConnectorDefinitionRequest message and returns a
  // GetGetConnectorDefinitionResponse message.
  rpc GetConnectorDefinition(GetConnectorDefinitionRequest) returns (GetConnectorDefinitionResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=connector-definitions/*}"};
    option (google.api.method_signature) = "name";
  }

  /////////////////////////////////
  // Connector-Resource methods
  /////////////////////////////////

  // ListConnectorResources method receives a
  // ListConnectorResourcesRequest message and returns a
  // ListConnectorResourcesResponse message.
  rpc ListConnectorResources(ListConnectorResourcesRequest) returns (ListConnectorResourcesResponse) {
    option (google.api.http) = {get: "/v1alpha/connector-resources"};
  }

  // CreateUserConnectorResource method receives a
  // CreateUserConnectorResourceRequest message and returns a
  // CreateUserConnectorResourceResponse message.
  rpc CreateUserConnectorResource(CreateUserConnectorResourceRequest) returns (CreateUserConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=users/*}/connector-resources"
      body: "connector_resource"
    };
    option (google.api.method_signature) = "parent,connector_resource";
  }

  // ListUserConnectorResources method receives a
  // ListUserConnectorResourcesRequest message and returns a
  // ListUserConnectorResourcesResponse message.
  rpc ListUserConnectorResources(ListUserConnectorResourcesRequest) returns (ListUserConnectorResourcesResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=users/*}/connector-resources"};
    option (google.api.method_signature) = "parent";
  }

  // GetUserConnectorResource method receives a GetUserConnectorResourceRequest
  // message and returns a GetUserConnectorResourceResponse message.
  rpc GetUserConnectorResource(GetUserConnectorResourceRequest) returns (GetUserConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/connector-resources/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdateUserConnectorResource method receives a
  // UpdateUserConnectorResourceRequest message and returns a
  // UpdateUserConnectorResourceResponse message.
  rpc UpdateUserConnectorResource(UpdateUserConnectorResourceRequest) returns (UpdateUserConnectorResourceResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{connector_resource.name=users/*/connector-resources/*}"
      body: "connector_resource"
    };
    option (google.api.method_signature) = "connector_resource,update_mask";
  }

  // DeleteUserConnectorResource method receives a
  // DeleteUserConnectorResourceRequest message and returns a
  // DeleteUserConnectorResourceResponse message.
  rpc DeleteUserConnectorResource(DeleteUserConnectorResourceRequest) returns (DeleteUserConnectorResourceResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=users/*/connector-resources/*}"};
    option (google.api.method_signature) = "name";
  }

  // LookUpUserConnectorResource method receives a
  // LookUpUserConnectorResourceRequest message and returns a
  // LookUpUserConnectorResourceResponse
  rpc LookUpUserConnectorResource(LookUpUserConnectorResourceRequest) returns (LookUpUserConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{permalink=users/*/connector-resources/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // Connect a connector resource.
  // The "state" of the connector resource after connecting is "CONNECTED".
  // ConnectUserConnectorResource can be called on ConnectorResource in the
  // state `DISCONNECTED`; ConnectorResource in a different state (including
  // `CONNECTED`) returns an error.
  rpc ConnectUserConnectorResource(ConnectUserConnectorResourceRequest) returns (ConnectUserConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/connector-resources/*}/connect"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // Disconnect a connectorResource.
  // The "state" of the connectorResource after disconnecting is "DISCONNECTED".
  // DisconnectUserConnectorResource can be called on ConnectorResource in the
  // state `CONNECTED`; ConnectorResource in a different state (including
  // `DISCONNECTED`) returns an error.
  rpc DisconnectUserConnectorResource(DisconnectUserConnectorResourceRequest) returns (DisconnectUserConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/connector-resources/*}/disconnect"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // RenameUserConnectorResource method receives a
  // RenameUserConnectorResourceRequest message and returns a
  // RenameUserConnectorResourceResponse message.
  rpc RenameUserConnectorResource(RenameUserConnectorResourceRequest) returns (RenameUserConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/connector-resources/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_connector_resource_id";
  }

  // ExecuteUserConnectorResource method receives a
  // ExecuteUserConnectorResourceRequest message and returns a
  // ExecuteUserConnectorResourceResponse message.
  rpc ExecuteUserConnectorResource(ExecuteUserConnectorResourceRequest) returns (ExecuteUserConnectorResourceResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/connector-resources/*}/execute"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // WatchUserConnectorResource method receives a
  // WatchUserConnectorResourceRequest message and returns a
  // WatchUserConnectorResourceResponse
  rpc WatchUserConnectorResource(WatchUserConnectorResourceRequest) returns (WatchUserConnectorResourceResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/connector-resources/*}/watch"};
    option (google.api.method_signature) = "name";
  }

  // TestUserConnectorResource method receives a TestUserConnectorResourceRequest
  // message and returns a TestUserConnectorResourceResponse
  rpc TestUserConnectorResource(TestUserConnectorResourceRequest) returns (TestUserConnectorResourceResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=users/*/connector-resources/*}/testConnection"};
    option (google.api.method_signature) = "name";
  }
}
