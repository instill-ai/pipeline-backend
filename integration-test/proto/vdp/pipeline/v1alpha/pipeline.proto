syntax = "proto3";

package vdp.pipeline.v1alpha;

import "../../../common/healthcheck/v1alpha/healthcheck.proto";
import "google/api/field_behavior.proto";
// Google API
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
// Protocol Buffers Well-Known Types
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "../../../vdp/connector/v1alpha/connector.proto";
import "../../../vdp/connector/v1alpha/connector_definition.proto";
import "../../../vdp/pipeline/v1alpha/common.proto";
import "../../../vdp/pipeline/v1alpha/operator_definition.proto";

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// ComponentType
enum ComponentType {
  // TYPE_UNSPECIFIED
  COMPONENT_TYPE_UNSPECIFIED = 0;
  // CONNECTOR_AI
  COMPONENT_TYPE_CONNECTOR_AI = 1;
  // CONNECTOR_DATA
  COMPONENT_TYPE_CONNECTOR_DATA = 2;
  // CONNECTOR_BLOCKCHAIN
  COMPONENT_TYPE_CONNECTOR_BLOCKCHAIN = 3;
  // CONNECTOR_OPERATOR
  COMPONENT_TYPE_OPERATOR = 4;
}

// Represents a pipeline component
message Component {
  // Component id that is given by the users
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  // A pipeline component resource name
  string resource_name = 2 [(google.api.resource_reference).type = "*"];
  // A pipeline component resource detail
  vdp.connector.v1alpha.ConnectorResource resource = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Configuration for the pipeline component
  google.protobuf.Struct configuration = 4;
  // Resource Type
  ComponentType type = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // A pipeline component definition name
  string definition_name = 7 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "*"
  ];
  // A pipeline component definition detail
  oneof definition {
    // operator definition detail
    OperatorDefinition operator_definition = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
    // connector definition detail
    vdp.connector.v1alpha.ConnectorDefinition connector_definition = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  }
}

// Pipeline represents a pipeline recipe
message Recipe {
  // Recipe schema version
  string version = 1;
  // List of pipeline components
  repeated Component components = 2;
}

// Pipeline represents the content of a pipeline
message Pipeline {
  option (google.api.resource) = {
    type: "api.instill.tech/Pipeline"
    pattern: "pipelines/{pipeline}"
  };

  // State enumerates the state of a pipeline
  enum State {
    // State: UNSPECIFIED
    STATE_UNSPECIFIED = 0;
    // State INACTIVE indicates the pipeline is inactive
    STATE_INACTIVE = 1;
    // State ACTIVE indicates the pipeline is active
    STATE_ACTIVE = 2;
    // State ERROR indicates the pipeline has error
    STATE_ERROR = 3;
  }

  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Pipeline UUID
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Pipeline resource ID (the last segment of the resource name) used to
  // construct the resource name. This conforms to RFC-1034, which restricts to
  // letters, numbers, and hyphen, with the first character a letter, the last a
  // letter or a number, and a 63 character maximum.
  string id = 3 [(google.api.field_behavior) = IMMUTABLE];
  // Pipeline description
  optional string description = 4 [(google.api.field_behavior) = OPTIONAL];
  // Pipeline recipe
  Recipe recipe = 5 [(google.api.field_behavior) = IMMUTABLE];
  // Pipeline state
  State state = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Pipeline owner
  oneof owner {
    // The resource name with UUID of a user, e.g.,
    // "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
    string user = 8 [
      (google.api.resource_reference).type = "api.instill.tech/User",
      (google.api.field_behavior) = OUTPUT_ONLY
    ];
    // The resource name with UUID of an organization
    string org = 9 [
      (google.api.resource_reference).type = "api.instill.tech/Organization",
      (google.api.field_behavior) = OUTPUT_ONLY
    ];
  }
  // Pipeline creation time
  google.protobuf.Timestamp create_time = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Pipeline update time
  google.protobuf.Timestamp update_time = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// CreatePipelineRequest represents a request to create a pipeline
message CreatePipelineRequest {
  // A pipeline resource to create
  Pipeline pipeline = 1 [(google.api.field_behavior) = REQUIRED];
}

// CreatePipelineResponse represents a response for a pipeline resource
message CreatePipelineResponse {
  // The created pipeline resource
  Pipeline pipeline = 1;
}

// ListPipelinesRequest represents a request to list pipelines
message ListPipelinesRequest {
  // The maximum number of pipelines to return. The service may return fewer
  // than this value. If unspecified, at most 10 pipelines will be returned. The
  // maximum value is 100; values above 100 will be coerced to 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // View view (default is VIEW_BASIC)
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter expression to list pipelines
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// ListPipelinesResponse represents a response for a list of pipelines
message ListPipelinesResponse {
  // A list of pipeline resources
  repeated Pipeline pipelines = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of pipeline resources
  int64 total_size = 3;
}

// GetPipelineRequest represents a request to query a pipeline
message GetPipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "pipeline.name"}
    }
  ];
  // Pipeline resource view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetPipelineResponse represents a response for a pipeline resource
message GetPipelineResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// UpdatePipelineRequest represents a request to update a pipeline
message UpdatePipelineRequest {
  // A pipeline resource to update
  Pipeline pipeline = 1 [(google.api.field_behavior) = REQUIRED];
  // Update mask for a pipeline resource
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// UpdatePipelineResponse represents a response for a pipeline resource
message UpdatePipelineResponse {
  // An updated pipeline resource
  Pipeline pipeline = 1;
}

// DeletePipelineRequest represents a request to delete a pipeline resource
message DeletePipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "pipeline.name"}
    }
  ];
}

// DeletePipelineResponse represents an empty response
message DeletePipelineResponse {}

// LookUpPipelineRequest represents a request to query a pipeline via permalink
message LookUpPipelineRequest {
  // Permalink of a pipeline. For example:
  // "pipelines/{uid}"
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpPipelineResponse represents a response for a pipeline resource
message LookUpPipelineResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// ActivatePipelineRequest represents a request to activate a pipeline
message ActivatePipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"}
  ];
}

// ActivatePipelineResponse represents an activated pipeline
message ActivatePipelineResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// DeactivatePipelineRequest represents a request to deactivate a pipeline
message DeactivatePipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"}
  ];
}

// DeactivatePipelineResponse represents an inactivated pipeline
message DeactivatePipelineResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// RenamePipelineRequest represents a request to rename the pipeline resource
// name
message RenamePipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"}
  ];
  // Pipeline new resource id to replace with the pipeline resource name to be
  // "pipelines/{new_pipeline_id}"
  string new_pipeline_id = 2 [(google.api.field_behavior) = REQUIRED];
}

// RenamePipelineResponse represents a renamed pipeline resource
message RenamePipelineResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// TriggerPipelineRequest represents a request to trigger a pipeline
message TriggerPipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"}
  ];
  // Input to the pipeline
  repeated google.protobuf.Struct inputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TriggerPipelineResponse represents a response for the output
// of a pipeline, i.e., the multiple model inference outputs
message TriggerPipelineResponse {
  // The multiple model inference outputs
  repeated google.protobuf.Struct outputs = 1;
}

// TriggerAsyncPipelineRequest represents a request to trigger a async pipeline
message TriggerAsyncPipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"}
  ];
  // Input to the pipeline
  repeated google.protobuf.Struct inputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TriggerAsyncPipelineResponse represents a response for the longrunning
// operation of a pipeline
message TriggerAsyncPipelineResponse {
  // Trigger async pipeline operation message
  google.longrunning.Operation operation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// GetOperationRequest represents a request to query a longrunning
// operation
message GetOperationRequest {
  // The name of the operation resource.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// GetOperationResponse represents a response for a longrunning
// operation
message GetOperationResponse {
  // The retrieved longrunning operation
  google.longrunning.Operation operation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// WatchPipelineRequest represents a public request to query
// a pipeline's current state
message WatchPipelineRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "pipeline.name/watch"}
    }
  ];
}

// WatchPipelineResponse represents a response to fetch a pipeline's
// current state
message WatchPipelineResponse {
  // Retrieved pipeline state
  Pipeline.State state = 1;
}

// ========== Private endpoints

// ListPipelinesAdminRequest represents a request to list all pipelines from all
// users by admin
message ListPipelinesAdminRequest {
  // The maximum number of pipelines to return. The service may return fewer
  // than this value. If unspecified, at most 10 pipelines will be returned. The
  // maximum value is 100; values above 100 will be coerced to 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // View view (default is VIEW_BASIC)
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter expression to list pipelines
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// ListPipelinesAdminResponse represents a response for a list of pipelines
// The recipe returned will be permaLinks instead of resourceName temporary,
// this will be refactored soon
message ListPipelinesAdminResponse {
  // A list of pipeline resources
  repeated Pipeline pipelines = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of pipeline resources
  int64 total_size = 3;
}

// GetPipelineAdminRequest represents a request to query a user's pipeline by
// admin
message GetPipelineAdminRequest {
  // Pipeline resource name. It must have the format of "pipelines/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/Pipeline"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "pipeline.name"}
    }
  ];
  // Pipeline resource view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetPipelineAdminResponse represents a response for a pipeline resource
message GetPipelineAdminResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}

// LookUpPipelineAdminRequest represents a request to query a user's pipeline
// via permalink by admin
message LookUpPipelineAdminRequest {
  // Permalink of a pipeline. For example:
  // "pipelines/{uid}"
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // View view (default is VIEW_BASIC)
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpPipelineAdminResponse represents a response for a pipeline resource
message LookUpPipelineAdminResponse {
  // A pipeline resource
  Pipeline pipeline = 1;
}
