syntax = "proto3";

package vdp.pipeline.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "../../../vdp/pipeline/v1alpha/operator_definition.proto";
import "../../../vdp/pipeline/v1alpha/pipeline.proto";

// Pipeline service responds to external access
service PipelinePublicService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/pipeline"}]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (v1alpha.ReadinessResponse) {
    option (google.api.http) = {get: "/v1alpha/__readiness"};
  }

  // ListOperatorDefinitions method receives a
  // ListOperatorDefinitionsRequest message and returns a
  // ListOperatorDefinitionsResponse message.
  rpc ListOperatorDefinitions(ListOperatorDefinitionsRequest) returns (ListOperatorDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/operator-definitions"};
  }

  // GetOperatorDefinition method receives a
  // GetOperatorDefinitionRequest message and returns a
  // GetGetOperatorDefinitionResponse message.
  rpc GetOperatorDefinition(GetOperatorDefinitionRequest) returns (GetOperatorDefinitionResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=operator-definitions/*}"};
    option (google.api.method_signature) = "name";
  }

  // ListPipelines method receives a ListPipelinesRequest message and returns a
  // ListPipelinesResponse message.
  rpc ListPipelines(ListPipelinesRequest) returns (ListPipelinesResponse) {
    option (google.api.http) = {get: "/v1alpha/pipelines"};
  }

  // LookUpPipeline method receives a LookUpPipelineRequest message and returns
  // a LookUpPipelineResponse
  rpc LookUpPipeline(LookUpPipelineRequest) returns (LookUpPipelineResponse) {
    option (google.api.http) = {get: "/v1alpha/{permalink=pipelines/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // CreateUserPipeline method receives a CreateUserPipelineRequest message and returns
  // a CreateUserPipelineResponse message.
  rpc CreateUserPipeline(CreateUserPipelineRequest) returns (CreateUserPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=users/*}/pipelines"
      body: "pipeline"
    };
    option (google.api.method_signature) = "parent,pipeline";
  }

  // ListUserPipelines method receives a ListUserPipelinesRequest message and returns a
  // ListUserPipelinesResponse message.
  rpc ListUserPipelines(ListUserPipelinesRequest) returns (ListUserPipelinesResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=users/*}/pipelines"};
    option (google.api.method_signature) = "parent";
  }

  // GetUserPipeline method receives a GetUserPipelineRequest message and returns a
  // GetUserPipelineResponse message.
  rpc GetUserPipeline(GetUserPipelineRequest) returns (GetUserPipelineResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/pipelines/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdateUserPipeline method receives a UpdateUserPipelineRequest message and returns
  // a UpdateUserPipelineResponse message.
  rpc UpdateUserPipeline(UpdateUserPipelineRequest) returns (UpdateUserPipelineResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{pipeline.name=users/*/pipelines/*}"
      body: "pipeline"
    };
    option (google.api.method_signature) = "pipeline,update_mask";
  }

  // DeleteUserPipeline method receives a DeleteUserPipelineRequest message and returns
  // a DeleteUserPipelineResponse message.
  rpc DeleteUserPipeline(DeleteUserPipelineRequest) returns (DeleteUserPipelineResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=users/*/pipelines/*}"};
    option (google.api.method_signature) = "name";
  }

  // Validate a pipeline.
  rpc ValidateUserPipeline(ValidateUserPipelineRequest) returns (ValidateUserPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*}/validate"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // RenameUserPipeline method receives a RenameUserPipelineRequest message and returns
  // a RenameUserPipelineResponse message.
  rpc RenameUserPipeline(RenameUserPipelineRequest) returns (RenameUserPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_pipeline_id";
  }

  // TriggerUserPipeline method receives a TriggerUserPipelineRequest message
  // and returns a TriggerUserPipelineResponse.
  rpc TriggerUserPipeline(TriggerUserPipelineRequest) returns (TriggerUserPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*}/trigger"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerAsyncUserPipeline method receives a TriggerAsyncUserPipelineRequest message and
  // returns a TriggerAsyncUserPipelineResponse.
  rpc TriggerAsyncUserPipeline(TriggerAsyncUserPipelineRequest) returns (TriggerAsyncUserPipelineResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*}/triggerAsync"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // *Longrunning operation methods

  // GetOperation method receives a
  // GetOperationRequest message and returns a
  // GetOperationResponse message.
  rpc GetOperation(GetOperationRequest) returns (GetOperationResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=operations/*}"};
    option (google.api.method_signature) = "name";
  }

  // CreateUserPipelineRelease method receives a CreateUserPipelineReleaseRequest message and returns
  // a CreateUserPipelineReleaseResponse message.
  rpc CreateUserPipelineRelease(CreateUserPipelineReleaseRequest) returns (CreateUserPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=users/*/pipelines/*}/releases"
      body: "release"
    };
    option (google.api.method_signature) = "parent,release";
  }

  // ListUserPipelineReleases method receives a ListUserPipelineReleasesRequest message and returns a
  // ListUserPipelineReleasesResponse message.
  rpc ListUserPipelineReleases(ListUserPipelineReleasesRequest) returns (ListUserPipelineReleasesResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=users/*/pipelines/*}/releases"};
    option (google.api.method_signature) = "pipelines";
  }

  // GetUserPipelineRelease method receives a GetUserPipelineReleaseRequest message and returns a
  // GetUserPipelineReleaseResponse message.
  rpc GetUserPipelineRelease(GetUserPipelineReleaseRequest) returns (GetUserPipelineReleaseResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/pipelines/*/releases/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdateUserPipelineRelease method receives a UpdateUserPipelineReleaseRequest message and returns
  // a UpdateUserPipelineReleaseResponse message.
  rpc UpdateUserPipelineRelease(UpdateUserPipelineReleaseRequest) returns (UpdateUserPipelineReleaseResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{release.name=usersr/*/pipelines/*/releases/*}"
      body: "release"
    };
    option (google.api.method_signature) = "release,update_mask";
  }

  // DeleteUserPipelineRelease method receives a DeleteUserPipelineReleaseRequest message and returns
  // a DeleteUserPipelineReleaseResponse message.
  rpc DeleteUserPipelineRelease(DeleteUserPipelineReleaseRequest) returns (DeleteUserPipelineReleaseResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=users/*/pipelines/*/releases/*}"};
    option (google.api.method_signature) = "name";
  }

  // RestoreUserPipelineRelease method receives a RestoreUserPipelineReleaseRequest message
  // and returns a RestoreUserPipelineReleaseResponse
  rpc RestoreUserPipelineRelease(RestoreUserPipelineReleaseRequest) returns (RestoreUserPipelineReleaseResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=users/*/pipelines/*/releases/*}/restore"};
    option (google.api.method_signature) = "name";
  }

  // SetDefaultUserPipelineRelease method receives a SetDefaultUserPipelineReleaseRequest message
  // and returns a SetDefaultUserPipelineReleaseResponse
  rpc SetDefaultUserPipelineRelease(SetDefaultUserPipelineReleaseRequest) returns (SetDefaultUserPipelineReleaseResponse) {
    option (google.api.http) = {post: "/v1alpha/{name=users/*/pipelines/*/releases/*}/set_default"};
    option (google.api.method_signature) = "name";
  }

  // WatchUserPipelineRelease method receives a WatchUserPipelineReleaseRequest message
  // and returns a WatchUserPipelineReleaseResponse
  rpc WatchUserPipelineRelease(WatchUserPipelineReleaseRequest) returns (WatchUserPipelineReleaseResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/pipelines/*/releases/default}/watch"};
    option (google.api.method_signature) = "name";
  }

  // RenameUserPipelineRelease method receives a RenameUserPipelineReleaseRequest message and returns
  // a RenameUserPipelineReleaseResponse message.
  rpc RenameUserPipelineRelease(RenameUserPipelineReleaseRequest) returns (RenameUserPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*/releases/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_pipeline_release_id";
  }

  // TriggerUserPipelineRelease method receives a TriggeUserPipelineReleaseRequest message
  // and returns a TriggerPipelineReleasePipelineResponse.
  rpc TriggerUserPipelineRelease(TriggerUserPipelineReleaseRequest) returns (TriggerUserPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*/releases/*}/trigger"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerAsyncUserPipelineRelease method receives a TriggerAsyncUserPipelineReleaseRequest message and
  // returns a TriggerAsyncUserPipelineReleaseResponse.
  rpc TriggerAsyncUserPipelineRelease(TriggerAsyncUserPipelineReleaseRequest) returns (TriggerAsyncUserPipelineReleaseResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/pipelines/*/releases/*}/triggerAsync"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }
}
