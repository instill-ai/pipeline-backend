syntax = "proto3";

package vdp.pipeline.v1beta;

import "protoc-gen-openapiv2/options/annotations.proto";

// These options define the OpenAPI definition document information.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ðŸ’§ VDP";
    description: "VDP endpoints to manage pipeline resources";
    // API info injected from common configuration.
    version: "v0.11.1-beta";
    contact: {
      name: "Instill AI";
      url: "https://github.com/instill-ai";
      email: "hello@instill.tech";
    };
    license: {
      name: "Elastic License 2.0 (ELv2)";
      url: "https://github.com/instill-ai/protobufs/blob/main/LICENSE";
    };
  };
  base_path: "/vdp";
  // API config injected from common configuration.
  host: "api.instill.tech";
  external_docs: {
    url: "https://www.instill.tech/docs";
    description: "More about Instill AI";
  };
  schemes: HTTPS;
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "Bearer";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`";
      }
    }
  }
  security: {
    security_requirement: {
      key: "Bearer";
      value: {};
    }
  }
  responses: {
    key: "401";
    value: {description: "Returned when the client credentials are not valid."},
  }
};
