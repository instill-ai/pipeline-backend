syntax = "proto3";

package vdp.pipeline.v1beta;

import "google/api/field_behavior.proto";
// Google API
import "google/api/resource.proto";
// Protocol Buffers Well-Known Types
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

////////////////////////////////////
// Spec represents a spec data model
message ConnectorSpec {
  // Spec resource specification
  google.protobuf.Struct resource_specification = 2 [(google.api.field_behavior) = REQUIRED];
  // Spec component specification
  google.protobuf.Struct component_specification = 3 [(google.api.field_behavior) = REQUIRED];
  // Spec openapi specification
  google.protobuf.Struct openapi_specifications = 4 [(google.api.field_behavior) = REQUIRED];
}

//////////////////////////////////////////////////////////////////////////

// ConnectorType enumerates connector types
enum ConnectorType {
  // ConnectorType: UNSPECIFIED
  CONNECTOR_TYPE_UNSPECIFIED = 0;
  // ConnectorType: SOURCE
  CONNECTOR_TYPE_SOURCE = 1;
  // ConnectorType: DESTINATION
  CONNECTOR_TYPE_DESTINATION = 2;
  // ConnectorType: AI
  CONNECTOR_TYPE_AI = 3;
  // ConnectorType: Blockchain
  CONNECTOR_TYPE_BLOCKCHAIN = 4;
  // ConnectorType: DATA
  CONNECTOR_TYPE_DATA = 5;
  // ConnectorType: OPERATOR
  CONNECTOR_TYPE_OPERATOR = 6;
}

// ConnectorDefinition represents the connector definition data model
message ConnectorDefinition {
  // View enumerates the definition views
  enum View {
    // View: UNSPECIFIED
    VIEW_UNSPECIFIED = 0;
    // View: BASIC
    VIEW_BASIC = 1;
    // View: FULL
    VIEW_FULL = 2;
  }

  option (google.api.resource) = {
    type: "api.instill.tech/ConnectorDefinition"
    pattern:
      "connector-definitions/"
      "{connector-definition}"
  };

  // ConnectorDefinition resource name. It must have the format of
  // "connector-definitions/*"
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition UUID
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition resource ID (the last segment of the
  // resource name) used to construct the resource name. This conforms to
  // RFC-1034, which restricts to letters, numbers, and hyphen, with the first
  // character a letter, the last a letter or a number, and a 63 character
  // maximum.
  string id = 3 [(google.api.field_behavior) = IMMUTABLE];
  // ConnectorDefinition title
  string title = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition documentation URL
  string documentation_url = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition icon
  string icon = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition spec
  ConnectorSpec spec = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Connector Type
  ConnectorType type = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition tombstone, i.e., if not set or false, the
  // configuration is active, or otherwise, if true, this configuration is
  // permanently off
  bool tombstone = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition public flag, i.e., true if this connector
  // definition is available to all workspaces
  bool public = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition custom flag, i.e., whether this is a custom
  // connector definition
  bool custom = 11 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition iconUrl
  string icon_url = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition vendor name
  string vendor = 13 [(google.api.field_behavior) = OUTPUT_ONLY];
  // ConnectorDefinition vendorAttributes, i.e. the vendor-specific attributes
  google.protobuf.Struct vendor_attributes = 14 [(google.api.field_behavior) = OUTPUT_ONLY];
}

///////////////////////////////////////////////////////////////////////
// RPC messages
///////////////////////////////////////////////////////////////////////

// ListConnectorDefinitionsRequest represents a request to list
// ConnectorDefinitions
message ListConnectorDefinitionsRequest {
  // The maximum number of ConnectorDefinitions to return. The
  // service may return fewer than this value. If unspecified, at most 10
  // ConnectorDefinitions will be returned. The maximum value is 100;
  // values above 100 will be coerced to 100.
  optional int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Definition view (default is DEFINITION_VIEW_BASIC)
  optional ConnectorDefinition.View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter expression to list connector definitions
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// ListConnectorDefinitionsResponse represents a response for a list
// of ConnectorDefinitions
message ListConnectorDefinitionsResponse {
  // A list of ConnectorDefinition resources
  repeated ConnectorDefinition connector_definitions = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of ConnectorDefinition resources
  int32 total_size = 3;
}

// GetConnectorDefinitionRequest represents a request to query a
// ConnectorDefinition resource
message GetConnectorDefinitionRequest {
  // ConnectorDefinition resource name. It must have the format of
  // "connector-definitions/*"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/ConnectorDefinition"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "connector_definition.name"}
    }
  ];
  // ConnectorDefinition resource view (default is
  // DEFINITION_VIEW_BASIC)
  optional ConnectorDefinition.View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetConnectorDefinitionResponse represents a
// ConnectorDefinition response
message GetConnectorDefinitionResponse {
  // A ConnectorDefinition resource
  ConnectorDefinition connector_definition = 1;
}

// LookUpConnectorDefinitionAdminRequest represents a request to query a
// connectorDefinition via permalink by admin
message LookUpConnectorDefinitionAdminRequest {
  // Permalink of a connector. For example:
  // "connector-definitions/{uid}"
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // Connector view (default is VIEW_BASIC)
  optional ConnectorDefinition.View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpConnectorDefinitionAdminResponse represents a response for a
// connector definition
message LookUpConnectorDefinitionAdminResponse {
  // Connector resource
  ConnectorDefinition connector_definition = 1;
}
