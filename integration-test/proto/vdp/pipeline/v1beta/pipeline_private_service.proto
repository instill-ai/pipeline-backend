syntax = "proto3";

package vdp.pipeline.v1beta;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/visibility.proto";
// OpenAPI definition
import "protoc-gen-openapiv2/options/annotations.proto";
import "../../../vdp/pipeline/v1beta/pipeline.proto";

// PipelinePrivateService defines private methods to interact with Pipeline
// resources.
service PipelinePrivateService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {description: "Private methods to interact with Pipeline resources."};

  // List pipelines (admin only)
  //
  // This is a *private* method that allows admin users and internal clients to
  // list *all* pipeline resources.
  rpc ListPipelinesAdmin(ListPipelinesAdminRequest) returns (ListPipelinesAdminResponse) {
    option (google.api.http) = {get: "/v1beta/admin/pipelines"};
  }

  // Get a pipeline by UID (admin only)
  //
  // This is a *private* method that allows admin users to access any pipeline
  // resource by its UID.
  rpc LookUpPipelineAdmin(LookUpPipelineAdminRequest) returns (LookUpPipelineAdminResponse) {
    option (google.api.http) = {get: "/v1beta/admin/{permalink=pipelines/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // List pipeline releases (admin only)
  //
  // This is a *private* method that allows admin users to list *all* pipeline
  // releases.
  rpc ListPipelineReleasesAdmin(ListPipelineReleasesAdminRequest) returns (ListPipelineReleasesAdminResponse) {
    option (google.api.http) = {get: "/v1beta/admin/releases"};
  }

  option (google.api.api_visibility).restriction = "INTERNAL";
}
