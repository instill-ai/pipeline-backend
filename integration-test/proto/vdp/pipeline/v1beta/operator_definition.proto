syntax = "proto3";

package vdp.pipeline.v1beta;

// Google API
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
// Protocol Buffers Well-Known Types
import "google/protobuf/struct.proto";
// OpenAPI definition
import "protoc-gen-openapiv2/options/annotations.proto";
// VDP definitions
import "../../../vdp/pipeline/v1beta/common.proto";

// OperatorSpec represents a specification data model.
message OperatorSpec {
  // Component specification.
  google.protobuf.Struct component_specification = 1 [(google.api.field_behavior) = REQUIRED];
  // OpenAPI specification.
  google.protobuf.Struct openapi_specifications = 2 [(google.api.field_behavior) = REQUIRED];
}

//////////////////////////////////////////////////////////////////////////

// An Operator is a type of pipeline component that performs data injection and
// manipulation. OperatorDefinition describes a certain type of operator.
//
// For more information, see
// [Component](https://www.instill.tech/docs/latest/core/concepts/pipeline#pipeline-component)
// in the official documentation.
message OperatorDefinition {
  option (google.api.resource) = {
    type: "api.instill.tech/OperatorDefinition"
    pattern: "operator-definitions/{id}"
    pattern: "operator-definitions/{uid}"
  };

  // View defines how an operator definition is presented.
  enum View {
    // Unspecified, equivalent to BASIC.
    VIEW_UNSPECIFIED = 0;
    // Default view, only includes basic information (removes the `spec`
    // field).
    VIEW_BASIC = 1;
    // Full representation.
    VIEW_FULL = 2;
  }

  // The name of the operator definition.
  // - Format: `operator-definitions/*`
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition UUID.
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition resource ID (used in `name` as the last segment).
  // This conforms to RFC-1034, which restricts to letters, numbers, and
  // hyphen, with the first character a letter, the last a letter or a number,
  // and a 63 character maximum.
  string id = 3 [(google.api.field_behavior) = IMMUTABLE];
  // Operator definition title.
  string title = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition documentation URL.
  string documentation_url = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition icon. This is a path that's relative to the root of
  // the operator implementation (see `source_url`) and that allows clients
  // frontend applications to pull and locate the icons.
  string icon = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition specification.
  OperatorSpec spec = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition tombstone. If true, this configuration is permanently
  // off. Otherwise, the configuration is active.
  bool tombstone = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The public flag determines whether this operator definition is available
  // to all workspaces.
  bool public = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The custom flag determines whether this is a custom operator definition.
  bool custom = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  // field 11 is reserved for 'icon_url'.
  reserved 11;
  // Source code URL. This points to the source code where the operator is
  // implemented.
  string source_url = 15 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Operator definition version. This is a string that fulfills the SemVer
  // specification (e.g. `1.0.0-beta`).
  string version = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
  // List of tasks that can be executed by the operator.
  repeated ComponentTask tasks = 17 [(google.api.field_behavior) = OUTPUT_ONLY];
}

///////////////////////////////////////////////////////////////////////
// RPC messages
///////////////////////////////////////////////////////////////////////

// ListOperatorDefinitionsRequest represents a request to list operator
// definitions.
message ListOperatorDefinitionsRequest {
  // The maximum number of OperatorDefinitions to return. The
  // service may return fewer than this value. If unspecified, at most 10
  // OperatorDefinitions will be returned. The maximum value is 100;
  // values above 100 will be coerced to 100.
  optional int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token.
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // View allows clients to specify the desired resource view in the response.
  optional OperatorDefinition.View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // Filter can hold an [AIP-160](https://google.aip.dev/160)-compliant filter
  // expression.
  // - Example: `create_time>timestamp("2000-06-19T23:31:08.657Z")`.
  optional string filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// ListOperatorDefinitionsResponse contains a list of operator definitions.
message ListOperatorDefinitionsResponse {
  // A list of operator definition resources.
  repeated OperatorDefinition operator_definitions = 1;
  // Next page token.
  string next_page_token = 2;
  // Total number of operator definitions.
  int32 total_size = 3;
}

// GetOperatorDefinitionRequest represents a request to fetch the details of a
// operator definition.
message GetOperatorDefinitionRequest {
  // The resource name of the operator definition, which allows its access by ID.
  // - Format: `operator-definitions/{id}`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/OperatorDefinition"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "operator_definition_name"}
    }
  ];
  // View allows clients to specify the desired resource view in the response.
  optional OperatorDefinition.View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetOperatorDefinitionResponse contains the requested operator definition.
message GetOperatorDefinitionResponse {
  // The operator definition resource.
  OperatorDefinition operator_definition = 1;
}

// LookUpOperatorDefinitionAdminRequest represents a request by an admin to
// query an operator definition by its UID.
message LookUpOperatorDefinitionAdminRequest {
  // The permalink of the operator definition, which allows its access by UID.
  // - Format: `operator-definitions/{uid}`.
  string permalink = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.instill.tech/OperatorDefinition"},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "operator_definition_permalink"}
    }
  ];
  // View allows clients to specify the desired operator definition view in the
  // response.
  optional OperatorDefinition.View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpOperatorDefinitionAdminResponse represents a response for an operator
// definition.
message LookUpOperatorDefinitionAdminResponse {
  // The requested operator definition.
  OperatorDefinition operator_definition = 1;
}
