syntax = "proto3";

package vdp.model.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";

import "../../../vdp/model/v1alpha/healthcheck.proto";
import "../../../vdp/model/v1alpha/model_definition.proto";
import "../../../vdp/model/v1alpha/model.proto";

// Model service responds to external access
service ModelPublicService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/v1alpha/__liveness"
      additional_bindings : [ {get : "/v1alpha/health/model"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/v1alpha/__readiness"
      additional_bindings : [ {get : "/v1alpha/ready/model"} ]
    };
  }

  // ListModelDefinitions method receives a ListModelDefinitionsRequest message
  // and returns a ListModelDefinitionsResponse
  rpc ListModelDefinitions(ListModelDefinitionsRequest)
      returns (ListModelDefinitionsResponse) {
    option (google.api.http) = {
      get : "/v1alpha/model-definitions"
    };
  }

  // GetModelDefinition method receives a GetModelDefinitionRequest message and
  // returns a GetModelDefinitionResponse
  rpc GetModelDefinition(GetModelDefinitionRequest)
      returns (GetModelDefinitionResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=model-definitions/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListModels method receives a ListModelsRequest message and returns a
  // ListModelsResponse
  rpc ListModels(ListModelsRequest) returns (ListModelsResponse) {
    option (google.api.http) = {
      get : "/v1alpha/models"
    };
  }

  // CreateModel method receives a CreateModelRequest message and returns a
  // CreateModelResponse
  rpc CreateModel(CreateModelRequest) returns (CreateModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/models"
      body : "model"
    };
    option (google.api.method_signature) = "model";
  }

  // CreateModelBinaryFileUpload method receives a
  // CreateModelBinaryFileUploadRequest message and returns a
  // CreateModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST /v1alpha/models:multipart"
  rpc CreateModelBinaryFileUpload(stream CreateModelBinaryFileUploadRequest)
      returns (CreateModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "id,model_definition,content";
  }

  // GetModel method receives a GetModelRequest message and returns a
  // GetModelResponse
  rpc GetModel(GetModelRequest) returns (GetModelResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=models/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // UpdateModel method receives a UpdateModelRequest message and returns a
  // UpdateModelResponse
  rpc UpdateModel(UpdateModelRequest) returns (UpdateModelResponse) {
    option (google.api.http) = {
      patch : "/v1alpha/{model.name=models/*}"
      body : "model"
    };
    option (google.api.method_signature) = "model,update_mask";
  }

  // DeleteModel method receives a DeleteModelRequest message and returns a
  // DeleteModelResponse
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse) {
    option (google.api.http) = {
      delete : "/v1alpha/{name=models/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // LookUpModel method receives a LookUpModelRequest message and returns a
  // LookUpModelResponse
  rpc LookUpModel(LookUpModelRequest) returns (LookUpModelResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{permalink=models/*}/lookUp"
    };
    option (google.api.method_signature) = "permalink";
  }

  // RenameModel method rename a model
  rpc RenameModel(RenameModelRequest) returns (RenameModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/rename"
      body : "*"
    };
    option (google.api.method_signature) = "name,new_model_id";
  }

  // PublishModel method receives a PublishModelRequest message and returns a
  // PublishModelResponse
  rpc PublishModel(PublishModelRequest) returns (PublishModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/publish"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }

  // UnpublishModel method receives a UnpublishModelRequest message and returns
  // a UnpublishModelResponse
  rpc UnpublishModel(UnpublishModelRequest) returns (UnpublishModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/unpublish"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }

  // DeployModel deploy a model to online state
  rpc DeployModel(DeployModelRequest)
      returns (DeployModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/deploy"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }

  // UndeployModel undeploy a model to offline state
  rpc UndeployModel(UndeployModelRequest)
      returns (UndeployModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/undeploy"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }

  // GetModelCard method receives a GetModelCardRequest message
  // and returns a GetModelCardResponse
  rpc GetModelCard(GetModelCardRequest)
      returns (GetModelCardResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=models/*/readme}"
    };
    option (google.api.method_signature) = "name";
  }

  // WatchModel method receives a WatchModelRequest message
  // and returns a WatchModelResponse
  rpc WatchModel(WatchModelRequest)
      returns (WatchModelResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=models/*}/watch"
    };
    option (google.api.method_signature) = "name";
  }

  ///////////////////////////////////////////////////////
  //
  // TriggerModel method receives a TriggerModelRequest message
  // and returns a TriggerModelResponse message.
  rpc TriggerModel(TriggerModelRequest)
      returns (TriggerModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/trigger"
      body : "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerModelBinaryFileUpload method receives a
  // TriggerModelBinaryFileUploadRequest message and returns a
  // TriggerModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST/v1alpha/{name=models/*}/trigger-multipart"
  rpc TriggerModelBinaryFileUpload(
      stream TriggerModelBinaryFileUploadRequest)
      returns (TriggerModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "name,file";
  }

  // TestModel method receives a TestModelRequest message
  // and returns a TestModelResponse message.
  rpc TestModel(TestModelRequest)
      returns (TestModelResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=models/*}/test"
      body : "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TestModelBinaryFileUpload method receives a
  // TestModelBinaryFileUploadRequest message and returns a
  // TestModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST/v1alpha/{name=models/*}/test-multipart"
  rpc TestModelBinaryFileUpload(
      stream TestModelBinaryFileUploadRequest)
      returns (TestModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "name,file";
  }

  // GetModelOperation method receives a
  // GetModelOperationRequest message and returns a
  // GetModelOperationResponse message.
  rpc GetModelOperation(GetModelOperationRequest)
      returns (GetModelOperationResponse) {
    option (google.api.http) = {
      get : "/v1alpha/{name=operations/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // ListModelOperations method receives a ListModelOperationsRequest message
  // and returns a ListModelOperationsResponse
  rpc ListModelOperations(ListModelOperationsRequest) returns (ListModelOperationsResponse) {
    option (google.api.http) = {
      get : "/v1alpha/operations"
    };
  }

  // CancelModelOperation method receives a CancelModelOperationRequest message
  // and returns a CancelModelOperationResponse
  rpc CancelModelOperation(CancelModelOperationRequest)
      returns (CancelModelOperationResponse) {
    option (google.api.http) = {
      post : "/v1alpha/{name=operations/*}/cancel"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }
}
