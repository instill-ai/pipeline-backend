BEGIN;

CREATE TYPE CONNECTOR_VALID_STATE AS ENUM (
  'STATE_UNSPECIFIED',
  'STATE_DISCONNECTED',
  'STATE_CONNECTED',
  'STATE_ERROR'
);

CREATE TYPE CONNECTOR_VALID_VISIBILITY AS ENUM (
  'VISIBILITY_UNSPECIFIED',
  'VISIBILITY_PRIVATE',
  'VISIBILITY_PUBLIC'
);

CREATE TYPE CONNECTOR_VALID_CONNECTOR_TYPE AS ENUM (
  'CONNECTOR_TYPE_UNSPECIFIED',
  'CONNECTOR_TYPE_AI',
  'CONNECTOR_TYPE_BLOCKCHAIN',
  'CONNECTOR_TYPE_DATA'
);


CREATE TABLE IF NOT EXISTS public.connector(
  "uid" UUID NOT NULL,
  "id" VARCHAR(255) NOT NULL,
  "connector_definition_uid" UUID NOT NULL,
  "owner" VARCHAR(255) NOT NULL,
  "description" VARCHAR(1023) NULL,
  "configuration" JSONB NOT NULL,
  "connector_type" CONNECTOR_VALID_CONNECTOR_TYPE DEFAULT 'CONNECTOR_TYPE_UNSPECIFIED' NOT NULL,
  "state" CONNECTOR_VALID_STATE DEFAULT 'STATE_UNSPECIFIED' NOT NULL,
  "tombstone" BOOL DEFAULT FALSE NOT NULL,
  "create_time" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "update_time" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "delete_time" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NULL,
  "visibility" CONNECTOR_VALID_VISIBILITY DEFAULT 'VISIBILITY_PRIVATE' NOT NULL,
  CONSTRAINT connector_pkey PRIMARY KEY (uid)
);

CREATE INDEX connector_uid_create_time_pagination ON public.connector (uid, create_time);
CREATE UNIQUE INDEX unique_owner_id_deleted_at ON public.connector (owner, id) WHERE delete_time IS NULL;

UPDATE public.pipeline SET recipe = REPLACE(recipe::text,'connector-resources/','connectors/')::jsonb;

COMMIT;
