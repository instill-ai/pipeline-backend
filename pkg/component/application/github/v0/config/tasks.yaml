$defs:
  commit:
    description: A commit object.
    properties:
      sha:
        description: SHA of the commit.
        uiOrder: 1
        title: Commit SHA
        format: string
      message:
        description: Message of the commit.
        uiOrder: 2
        title: Commit message
        format: string
      stats:
        uiOrder: 3
        $ref: "#/$defs/commitStats"
        required: []
      files:
        description: Files in the commit.
        uiOrder: 4
        title: Files
        items:
          $ref: "#/$defs/commitFile"
          required: []
          description: A file in the commit.
        format: array
    required: []
    title: Commit
    format: object
  commitStats:
    description: Stats of changes.
    uiOrder: 1
    properties:
      additions:
        description: Number of additions in the commit.
        uiOrder: 1
        title: Additions
        format: integer
      deletions:
        description: Number of deletions in the commit.
        uiOrder: 2
        title: Deletions
        format: integer
      changes:
        description: Total number of changes in the commit.
        uiOrder: 3
        title: Total changes
        format: integer
    required: []
    title: Commit stats
    format: object
  commitFile:
    description: A commit file object.
    properties:
      filename:
        description: Name of the file.
        uiOrder: 1
        title: File name
        format: string
      $ref: "#/$defs/commitStats/properties"
      patch:
        description: Patch of the file.
        uiOrder: 3
        title: Patch
        format: string
    required: []
    title: Commit File
    format: object
  issue:
    description: An issue object.
    properties:
      number:
        description: Number of the issue.
        uiOrder: 2
        title: Issue Number
        format: integer
      state:
        description: State of the issue.
        uiOrder: 3
        title: Issue state
        format: string
      title:
        description: Title of the issue.
        uiOrder: 4
        title: Issue title
        format: string
      body:
        description: Body of the issue.
        uiOrder: 5
        title: Issue body
        format: string
      assignee:
        description: Assignee of the issue.
        uiOrder: 6
        title: Assignee
        format: string
      assignees:
        description: Assignees of the issue.
        uiOrder: 7
        title: Assignees
        items:
          format: string
        format: array
      labels:
        description: Labels of the issue.
        uiOrder: 8
        title: Labels
        items:
          format: string
        format: array
      is-pull-request:
        description: Whether the issue is a pull request.
        uiOrder: 9
        title: Is Pull Request
        format: boolean
    title: Issue
    format: object
  organization:
    description: Organization Full
    properties:
      login:
        format: string # type: string
        examples: [github]
        uiOrder: 0
      id:
        format: integer # type: integer
        examples: [1]
        uiOrder: 1
      node-id:
        format: string # type: string
        examples: [MDEyOk9yZ2FuaXphdGlvbjE=]
        uiOrder: 2
      url:
        format: string # type: string, format: uri
        examples: ["https://api.github.com/orgs/github"]
        uiOrder: 3
      repos-url:
        format: string # type: string, format: uri
        examples: ["https://api.github.com/orgs/github/repos"]
        uiOrder: 4
      events-url:
        format: string # type: string, format: uri
        examples: ["https://api.github.com/orgs/github/events"]
        uiOrder: 5
      hooks-url:
        format: string # type: string
        examples: ["https://api.github.com/orgs/github/hooks"]
        uiOrder: 6
      issues-url:
        format: string # type: string
        examples: ["https://api.github.com/orgs/github/issues"]
        uiOrder: 7
      members-url:
        format: string # type: string
        examples: ["https://api.github.com/orgs/github/members{/member}"]
        uiOrder: 8
      public-members-url:
        format: string # type: string
        examples: ["https://api.github.com/orgs/github/public_members{/member}"]
        uiOrder: 9
      avatar-url:
        format: string # type: string
        examples: ["https://github.com/images/error/octocat_happy.gif"]
        uiOrder: 10
      description:
        format: string # type: [string, null]
        examples: [A great organization]
        uiOrder: 11
      name:
        format: string # type: string
        examples: [github]
        uiOrder: 12
      company:
        format: string # type: string
        examples: [GitHub]
        uiOrder: 13
      blog:
        format: string # type: string, format: uri
        examples: ["https://github.com/blog"]
        uiOrder: 14
      location:
        format: string # type: string
        examples: [San Francisco]
        uiOrder: 15
      email:
        format: string # type: string, format: email
        examples: [octocat@github.com]
        uiOrder: 16
      twitter-username:
        format: string # type: [string, null]
        examples: [github]
        uiOrder: 17
      is-verified:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 18
      has-organization-projects:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 19
      has-repository-projects:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 20
      public-repos:
        format: integer # type: integer
        examples: [2]
        uiOrder: 21
      public-gists:
        format: integer # type: integer
        examples: [1]
        uiOrder: 22
      followers:
        format: integer # type: integer
        examples: [20]
        uiOrder: 23
      following:
        format: integer # type: integer
        examples: [0]
        uiOrder: 24
      html-url:
        format: string # type: string, format: uri
        examples: ["https://github.com/octocat"]
        uiOrder: 25
      type:
        format: string # type: string
        examples: [Organization]
        uiOrder: 26
      total-private-repos:
        format: integer # type: integer
        examples: [100]
        uiOrder: 27
      owned-private-repos:
        format: integer # type: integer
        examples: [100]
        uiOrder: 28
      private-gists:
        format: integer # type: [integer, null]
        examples: [81]
        uiOrder: 29
      disk-usage:
        format: integer # type: [integer, null]
        examples: [10000]
        uiOrder: 30
      collaborators:
        format: integer # type: [integer, null]
        description: >
          The number of collaborators on private repositories.
          This field may be null if the number of private repositories is over 50,000.
        examples: [8]
        uiOrder: 31
      billing-email:
        format: string # type: [string, null], format: email
        examples: [org@example.com]
        uiOrder: 32
      plan:
        format: object # type: object
        properties:
          name:
            format: string # type: string
            uiOrder: 0
          space:
            format: integer # type: integer
            uiOrder: 1
          private-repos:
            format: integer # type: integer
            uiOrder: 2
          filled-seats:
            format: integer # type: integer
            uiOrder: 3
          seats:
            format: integer # type: integer
            uiOrder: 4
        required:
          - name
          - space
          - private-repos
        uiOrder: 33
      default-repository-permission:
        format: string # type: [string, null]
        uiOrder: 34
      members-can-create-repositories:
        format: boolean # type: [boolean, null]
        examples: [true]
        uiOrder: 35
      two-factor-requirement-enabled:
        format: boolean # type: [boolean, null]
        examples: [true]
        uiOrder: 36
      members-allowed-repository-creation-type:
        format: string # type: string
        examples: [all]
        uiOrder: 37
      members-can-create-public-repositories:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 38
      members-can-create-private-repositories:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 39
      members-can-create-internal-repositories:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 40
      members-can-create-pages:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 41
      members-can-create-public-pages:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 42
      members-can-create-private-pages:
        format: boolean # type: boolean
        examples: [true]
        uiOrder: 43
      members-can-fork-private-repositories:
        format: boolean # type: [boolean, null]
        examples: [false]
        uiOrder: 44
      web-commit-signoff-required:
        format: boolean # type: boolean
        examples: [false]
        uiOrder: 45
      advanced-security-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 46
      dependabot-alerts-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 47
      dependabot-security-updates-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 48
      dependency-graph-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 49
      secret-scanning-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 50
      secret-scanning-push-protection-enabled-for-new-repositories:
        format: boolean # type: boolean
        description: >
          **Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.
          Whether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.
          This field is only visible to organization owners or members of a team with the security manager role.
        examples: [false]
        deprecated: true
        uiOrder: 51
      secret-scanning-push-protection-custom-link-enabled:
        format: boolean # type: boolean
        description: Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.
        examples: [false]
        uiOrder: 52
      secret-scanning-push-protection-custom-link:
        format: string # type: [string, null]
        description: An optional URL string to display to contributors who are blocked from pushing a secret.
        examples: ["https://github.com/test-org/test-repo/blob/main/README.md"]
        uiOrder: 53
      created-at:
        format: string # type: string, format: date-time
        examples: ["2008-01-14T04:33:35Z"]
        uiOrder: 54
      updated-at:
        format: string # type: string, format: date-time
        uiOrder: 55
      archived-at:
        format: string # type: [string, null], format: date-time
        uiOrder: 56
      deploy-keys-enabled-for-repositories:
        format: boolean # type: boolean
        description: Controls whether or not deploy keys may be added and used for repositories in the organization.
        examples: [false]
        uiOrder: 57
    required:
      - login
      - url
      - id
      - node-id
      - repos-url
      - events-url
      - hooks-url
      - issues-url
      - members-url
      - public-members-url
      - avatar-url
      - description
      - html-url
      - has-organization-projects
      - has-repository-projects
      - public-repos
      - public-gists
      - followers
      - following
      - type
      - created-at
      - updated-at
      - archived-at
    title: Organization Full
    format: object # type: object
  pageOptions:
    title: Page Options
    description: Options for listing pages.
    required: []
    page:
      default: 1
      description: Page number of the results to fetch. Default is 1.
      uiOrder: 100
      title: Page
      acceptFormats:
        - integer
      format: integer
    per-page:
      default: 30
      description: Number of results to fetch per page. Default is 30.
      uiOrder: 101
      title: Per Page
      acceptFormats:
        - integer
      format: integer
    format: object
  pullRequest:
    description: A pull request object.
    properties:
      id:
        description: ID of the PR.
        uiOrder: 1
        title: PR id
        format: integer
      number:
        description: Number of the PR.
        uiOrder: 2
        title: PR number
        format: integer
      state:
        description: State of the PR.
        uiOrder: 3
        title: PR state
        format: string
      title:
        description: Title of the PR.
        uiOrder: 4
        title: PR Title
        format: string
      body:
        description: Body of the PR.
        uiOrder: 5
        title: PR body
        format: string
      diff-url:
        description: URL to the diff of the PR.
        uiOrder: 6
        title: PR diff url
        format: string
      head:
        description: Head commit of the PR (in SHA value).
        uiOrder: 8
        title: PR head
        format: string
      base:
        description: Base commit of the PR (in SHA value).
        uiOrder: 9
        title: PR base
        format: string
      comments-num:
        description: Number of comments on the PR.
        uiOrder: 10
        title: Number of PR comments
        format: integer
      commits-num:
        description: Number of commits in the PR.
        uiOrder: 11
        title: Number of PR commits
        format: integer
      review-comments-num:
        description: Number of review comments in the PR.
        uiOrder: 12
        title: Number of PR review comments
        format: integer
      commits:
        description: Commits in the PR.
        uiOrder: 13
        title: Commits
        items:
          $ref: "#/$defs/commit"
          required: []
          description: A commit in the PR.
        format: array
    required: []
    title: Pull Request
    format: object
  repositoryInfo:
    owner:
      description: Owner of the repository.
      uiOrder: 0
      acceptFormats:
        - string
      title: Owner
      format: string
    repository:
      description: Repository name.
      uiOrder: 1
      acceptFormats:
        - string
      title: Repository
      format: string
  reviewComments:
    description: A review comment object.
    properties:
      id:
        description: ID of the comment.
        uiOrder: 1
        title: Comment id
        format: integer
      in-reply-to-id:
        description: ID of the comment this comment is in reply to.
        uiOrder: 2
        title: In Reply To
        format: integer
      commit-id:
        description: SHA of the commit on which you want to comment.
        uiOrder: 3
        title: Commit SHA
        format: string
      body:
        description: Body of the comment.
        uiOrder: 4
        title: Comment body
        format: string
      path:
        description: Path of the file the comment is on.
        uiOrder: 5
        title: Comment path
        format: string
      line:
        shortDescription: The last line of the range that your comment applies to. Your comment will be placed under this line.
        description: The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that
          your comment applies to.
        uiOrder: 6
        title: Comment end line
        format: integer
      start-line:
        description: The first line in the pull request diff that your multi-line comment applies to. Only multi-line comment needs to fill this field.
        uiOrder: 7
        title: Comment start line
        format: integer
      side:
        shortDescription: "Side of the end line, can be one of: LEFT, RIGHT, side. Default is side."
        description: "Side of the end line, can be one of: LEFT, RIGHT, side. LEFT is the left side of the diff (deletion), RIGHT is the right side of the\
          \ diff (addition), and side is the comment on the PR as a whole. Default is side."
        default: side
        enum:
          - LEFT
          - RIGHT
          - side
        uiOrder: 8
        title: Comment end side
        format: string
      start-side:
        shortDescription: "Side of the start line, can be one of: LEFT, RIGHT, side. Default is side."
        description: "Side of the start line, can be one of: LEFT, RIGHT, side. LEFT is the left side of the diff (deletion), RIGHT is the right side of\
          \ the diff (addition), and side is the comment on the PR as a whole. Default is side."
        default: side
        enum:
          - LEFT
          - RIGHT
          - side
        uiOrder: 9
        title: Comment start side
        format: string
      subject-type:
        description: "Subject type of the comment, can be one of: line, file. Default is line."
        uiOrder: 10
        title: Comment type
        default: line
        enum:
          - line
          - file
        format: string
      created-at:
        description: Time the comment was created.
        uiOrder: 11
        title: Comment created at
        format: string
      updated-at:
        description: Time the comment was updated.
        uiOrder: 12
        title: Comment updated at
        format: string
      user:
        description: User who created the comment.
        uiOrder: 13
        title: User
        properties:
          id:
            description: ID of the user.
            uiOrder: 14
            title: User id
            format: integer
          url:
            description: URL of the user.
            uiOrder: 15
            title: User URL
            format: string
        required: []
        format: object
    title: Review Comment
    format: object
  user:
    oneOf:
      - title: Private User
        description: Private User
        format: object # type: object
        properties:
          login:
            format: string # type: string
            examples: [octocat]
            uiOrder: 0
          id:
            format: integer # type: integer, format: int64
            examples: [1]
            uiOrder: 1
          user_view_type:
            format: string # type: string
            uiOrder: 2
          node_id:
            format: string # type: string
            examples: [MDQ6VXNlcjE=]
            uiOrder: 3
          avatar_url:
            format: string # type: string, format: uri
            examples: ["https://github.com/images/error/octocat_happy.gif"]
            uiOrder: 4
          gravatar_id:
            format: string # type: [string, null]
            examples: [41d064eb2195891e12d0413f63227ea7]
            uiOrder: 5
          url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat"]
            uiOrder: 6
          html_url:
            format: string # type: string, format: uri
            examples: ["https://github.com/octocat"]
            uiOrder: 7
          followers_url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat/followers"]
            uiOrder: 8
          following_url:
            format: string # type: string
            examples: ["https://api.github.com/users/octocat/following{/other_user}"]
            uiOrder: 9
          gists_url:
            format: string # type: string
            examples: ["https://api.github.com/users/octocat/gists{/gist_id}"]
            uiOrder: 10
          starred_url:
            format: string # type: string
            examples: ["https://api.github.com/users/octocat/starred{/owner}{/repo}"]
            uiOrder: 11
          subscriptions_url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat/subscriptions"]
            uiOrder: 12
          organizations_url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat/orgs"]
            uiOrder: 13
          repos_url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat/repos"]
            uiOrder: 14
          events_url:
            format: string # type: string
            examples: ["https://api.github.com/users/octocat/events{/privacy}"]
            uiOrder: 15
          received_events_url:
            format: string # type: string, format: uri
            examples: ["https://api.github.com/users/octocat/received_events"]
            uiOrder: 16
          type:
            format: string # type: string
            examples: [User]
            uiOrder: 17
          site_admin:
            format: boolean # type: boolean
            uiOrder: 18
          name:
            format: string # type: [string, null]
            examples: [monalisa octocat]
            uiOrder: 19
          company:
            format: string # type: [string, null]
            examples: [GitHub]
            uiOrder: 20
          blog:
            format: string # type: [string, null]
            examples: ["https://github.com/blog"]
            uiOrder: 21
          location:
            format: string # type: [string, null]
            examples: [San Francisco]
            uiOrder: 22
          email:
            format: string # type: [string, null], format: email
            examples: [octocat@github.com]
            uiOrder: 23
          notification_email:
            format: string # type: [string, null], format: email
            examples: [octocat@github.com]
            uiOrder: 24
          hireable:
            format: boolean # type: [boolean, null]
            uiOrder: 25
          bio:
            format: string # type: [string, null]
            examples: [There once was...]
            uiOrder: 26
          twitter_username:
            format: string # type: [string, null]
            examples: [monalisa]
            uiOrder: 27
          public_repos:
            format: integer # type: integer
            examples: [2]
            uiOrder: 28
          public_gists:
            format: integer # type: integer
            examples: [1]
            uiOrder: 29
          followers:
            format: integer # type: integer
            examples: [20]
            uiOrder: 30
          following:
            format: integer # type: integer
            examples: [0]
            uiOrder: 31
          created_at:
            format: string # type: string, format: date-time
            examples: ["2008-01-14T04:33:35Z"]
            uiOrder: 32
          updated_at:
            format: string # type: string, format: date-time
            examples: ["2008-01-14T04:33:35Z"]
            uiOrder: 33
          private_gists:
            format: integer # type: integer
            examples: [81]
            uiOrder: 34
          total_private_repos:
            format: integer # type: integer
            examples: [100]
            uiOrder: 35
          owned_private_repos:
            format: integer # type: integer
            examples: [100]
            uiOrder: 36
          disk_usage:
            format: integer # type: integer
            examples: [10000]
            uiOrder: 37
          collaborators:
            format: integer # type: integer
            examples: [8]
            uiOrder: 38
          two_factor_authentication:
            format: boolean # type: boolean
            examples: [true]
            uiOrder: 39
          plan:
            format: object # type: object
            properties:
              collaborators:
                format: integer # type: integer
                uiOrder: 0
              name:
                format: string # type: string
                uiOrder: 1
              space:
                format: integer # type: integer
                uiOrder: 2
              private_repos:
                format: integer # type: integer
                uiOrder: 3
            required:
              - collaborators
              - name
              - space
              - private_repos
            uiOrder: 40
          business_plus:
            format: boolean # type: boolean
            uiOrder: 41
          ldap_dn:
            format: string # type: string
            uiOrder: 42
        required:
          - avatar_url
          - events_url
          - followers_url
          - following_url
          - gists_url
          - gravatar_id
          - html_url
          - id
          - node_id
          - login
          - organizations_url
          - received_events_url
          - repos_url
          - site_admin
          - starred_url
          - subscriptions_url
          - type
          - url
          - bio
          - blog
          - company
          - email
          - followers
          - following
          - hireable
          - location
          - name
          - public_gists
          - public_repos
          - created_at
          - updated_at
          - collaborators
          - disk_usage
          - owned_private_repos
          - private_gists
          - total_private_repos
          - two_factor_authentication
      - title: Public User
        description: Public User
        format: object # type: object
        properties:
          login:
            format: string # type: string
            uiOrder: 0
          id:
            format: integer # type: integer, format: int64
            uiOrder: 1
          user_view_type:
            format: string # type: string
            uiOrder: 2
          node_id:
            format: string # type: string
            uiOrder: 3
          avatar_url:
            format: string # type: string, format: uri
            uiOrder: 4
          gravatar_id:
            format: string # type: [string, null]
            uiOrder: 5
          url:
            format: string # type: string, format: uri
            uiOrder: 6
          html_url:
            format: string # type: string, format: uri
            uiOrder: 7
          followers_url:
            format: string # type: string, format: uri
            uiOrder: 8
          following_url:
            format: string # type: string
            uiOrder: 9
          gists_url:
            format: string # type: string
            uiOrder: 10
          starred_url:
            format: string # type: string
            uiOrder: 11
          subscriptions_url:
            format: string # type: string, format: uri
            uiOrder: 12
          organizations_url:
            format: string # type: string, format: uri
            uiOrder: 13
          repos_url:
            format: string # type: string, format: uri
            uiOrder: 14
          events_url:
            format: string # type: string
            uiOrder: 15
          received_events_url:
            format: string # type: string, format: uri
            uiOrder: 16
          type:
            format: string # type: string
            uiOrder: 17
          site_admin:
            format: boolean # type: boolean
            uiOrder: 18
          name:
            format: string # type: [string, null]
            uiOrder: 19
          company:
            format: string # type: [string, null]
            uiOrder: 20
          blog:
            format: string # type: [string, null]
            uiOrder: 21
          location:
            format: string # type: [string, null]
            uiOrder: 22
          email:
            format: string # type: [string, null], format: email
            uiOrder: 23
          notification_email:
            format: string # type: [string, null], format: email
            uiOrder: 24
          hireable:
            format: boolean # type: [boolean, null]
            uiOrder: 25
          bio:
            format: string # type: [string, null]
            uiOrder: 26
          twitter_username:
            format: string # type: [string, null]
            uiOrder: 27
          public_repos:
            format: integer # type: integer
            uiOrder: 28
          public_gists:
            format: integer # type: integer
            uiOrder: 29
          followers:
            format: integer # type: integer
            uiOrder: 30
          following:
            format: integer # type: integer
            uiOrder: 31
          created_at:
            format: string # type: string, format: date-time
            uiOrder: 32
          updated_at:
            format: string # type: string, format: date-time
            uiOrder: 33
          plan:
            format: object # type: object
            properties:
              collaborators:
                format: integer # type: integer
                uiOrder: 0
              name:
                format: string # type: string
                uiOrder: 1
              space:
                format: integer # type: integer
                uiOrder: 2
              private_repos:
                format: integer # type: integer
                uiOrder: 3
            required:
              - collaborators
              - name
              - space
              - private_repos
            uiOrder: 34
          private_gists:
            format: integer # type: integer
            examples: [1]
            uiOrder: 35
          total_private_repos:
            format: integer # type: integer
            examples: [2]
            uiOrder: 36
          owned_private_repos:
            format: integer # type: integer
            examples: [2]
            uiOrder: 37
          disk_usage:
            format: integer # type: integer
            examples: [1]
            uiOrder: 38
          collaborators:
            format: integer # type: integer
            examples: [3]
            uiOrder: 39
        required:
          - avatar_url
          - events_url
          - followers_url
          - following_url
          - gists_url
          - gravatar_id
          - html_url
          - id
          - node_id
          - login
          - organizations_url
          - received_events_url
          - repos_url
          - site_admin
          - starred_url
          - subscriptions_url
          - type
          - url
          - bio
          - blog
          - company
          - email
          - followers
          - following
          - hireable
          - location
          - name
          - public_gists
          - public_repos
          - created_at
          - updated_at
        additionalProperties: false
TASK_CREATE_ISSUE:
  description: Create an issue.
  input:
    description: Please input the repository name and owner.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      title:
        $ref: "#/$defs/issue/properties/title"
        acceptFormats:
          - string
        uiOrder: 3
      body:
        $ref: "#/$defs/issue/properties/body"
        acceptFormats:
          - string
        uiOrder: 4
      assignees:
        $ref: "#/$defs/issue/properties/assignees"
        acceptFormats:
          - array
        items:
          format: string
        title: Assignees
        uiOrder: 5
      labels:
        $ref: "#/$defs/issue/properties/labels"
        acceptFormats:
          - array
        items:
          format: string
        title: Labels
        uiOrder: 6
    required:
      - owner
      - repository
      - title
      - body
    title: Input
    format: object
  output:
    description: The created issue.
    uiOrder: 0
    properties:
      $ref: "#/$defs/issue/properties"
    required: []
    title: Output
    format: object
TASK_CREATE_REVIEW_COMMENT:
  shortDescription: Create a review comment in pull request.
  description: Create a review comment in a pull request. The comment can be a general comment or a review comment. The comment can be on a specific line
    or on the PR as a whole.
  input:
    description: Please input the repository name and owner, and the PR number.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      pr-number:
        title: PR Number
        description: Number of the PR.
        acceptFormats:
          - integer
        uiOrder: 3
        format: integer
      comment:
        title: Comment
        description: The comment to be added.
        uiOrder: 4
        properties:
          commit-id:
            $ref: "#/$defs/reviewComments/properties/commit-id"
            acceptFormats:
              - string
            uiOrder: 0
          body:
            $ref: "#/$defs/reviewComments/properties/body"
            acceptFormats:
              - string
            uiOrder: 1
          path:
            $ref: "#/$defs/reviewComments/properties/path"
            acceptFormats:
              - string
            uiOrder: 2
          start-line:
            $ref: "#/$defs/reviewComments/properties/start-line"
            acceptFormats:
              - integer
            uiOrder: 3
          line:
            $ref: "#/$defs/reviewComments/properties/line"
            acceptFormats:
              - integer
            uiOrder: 4
          start-side:
            $ref: "#/$defs/reviewComments/properties/start-side"
            acceptFormats:
              - string
            uiOrder: 5
          side:
            $ref: "#/$defs/reviewComments/properties/side"
            acceptFormats:
              - string
            uiOrder: 6
          subject-type:
            $ref: "#/$defs/reviewComments/properties/subject-type"
            acceptFormats:
              - string
            uiOrder: 7
        required:
          - body
          - path
          - commit-id
        format: object
    required:
      - owner
      - repository
      - pr-number
      - comment
    title: Input
    format: object
  output:
    description: The created comment.
    uiOrder: 0
    properties:
      $ref: "#/$defs/reviewComments/properties"
    required: []
    title: Output
    format: object
TASK_CREATE_WEBHOOK:
  description: Create a webhook for a repository.
  input:
    description: Please input the repository name and owner.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      hook-url:
        title: Webhook URL
        description: URL to send the payload to.
        acceptFormats:
          - string
        uiOrder: 3
        format: string
      events:
        title: Events
        description: Events to trigger the webhook. Please see <a href="https://docs.github.com/en/webhooks/webhook-events-and-payloads">the github document</a>
          for more information.
        acceptFormats:
          - array
        uiOrder: 4
        items:
          acceptFormats:
            - string
          format: string
        format: array
      active:
        title: Active
        default: false
        description: Whether the webhook is active. Default is false.
        acceptFormats:
          - boolean
        uiOrder: 5
        format: boolean
      content-type:
        default: json
        title: Content Type
        description: "Content type of the webhook, can be one of: json, form. Default is json."
        enum:
          - json
          - form
        acceptFormats:
          - string
        uiOrder: 6
        format: string
      hook-secret:
        title: Hook Secret
        description: If provided, the secret will be used as the key to generate the HMAC hex digest value for delivery signature headers. (see <a href="https://docs.github.com/en/webhooks/webhook-events-and-payloads#delivery-headers">the
          document</a>).
        instillSecret: true
        acceptFormats:
          - string
        uiOrder: 7
        format: string
    required:
      - owner
      - repository
      - hook-url
      - events
    title: Input
    format: object
  output:
    description: The created webhook.
    uiOrder: 0
    properties:
      id:
        description: ID of the webhook.
        uiOrder: 1
        title: Webhook ID
        format: integer
      url:
        description: URL of the webhook.
        uiOrder: 2
        title: Webhook URL
        format: string
      ping-url:
        description: URL to ping the webhook.
        uiOrder: 3
        title: Ping URL
        format: string
      test-url:
        description: URL to test the webhook.
        uiOrder: 4
        title: Test URL
        format: string
      config:
        description: Configuration of the webhook.
        uiOrder: 6
        title: Config
        properties:
          url:
            description: URL of the webhook.
            uiOrder: 1
            title: Webhook URL
            format: string
          content-type:
            description: Content type of the webhook.
            uiOrder: 2
            title: Content Type
            format: string
          insecure-ssl:
            description: Whether the webhook is insecure.
            uiOrder: 3
            title: Insecure SSL
            format: string
        required: []
        format: object
    required: []
    title: Output
    format: object
TASK_GET_COMMIT:
  shortDescription: Get a commit from a repository, given the commit SHA
  input:
    description: Please input the repository name and owner, and the commit SHA.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      sha:
        $ref: "#/$defs/commit/properties/sha"
        acceptFormats:
          - string
        uiOrder: 3
    required:
      - owner
      - repository
      - sha
    title: Input
    format: object
  output:
    description: The specific commit in GitHub repository.
    uiOrder: 0
    properties:
      $ref: "#/$defs/commit/properties"
    required: []
    title: Output
    format: object
TASK_GET_ISSUE:
  description: Get an issue. This can be a pull request or a general issue, and you can tell by the `is-pull-request` field.
  shortDescription: Get an issue.
  input:
    description: Please input the repository name and owner.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      issue-number:
        default: 0
        title: Issue Number
        description: Number of the issue.
        acceptFormats:
          - integer
        uiOrder: 4
        format: integer
    required:
      - owner
      - repository
      - issue-number
    title: Input
    format: object
  output:
    description: The specific issue in GitHub repository.
    uiOrder: 0
    properties:
      $ref: "#/$defs/issue/properties"
    required: []
    title: Output
    format: object
TASK_GET_ORGANIZATION:
  description: Get an organization by name or ID.
  shortDescription: Get an organization by name or ID.
  input:
    description: Please input either the organization name or organization ID.
    editOnNodeFields:
      - name
      - id
    properties:
      name:
        title: Name
        description: The GitHub organization name.
        format: string
        acceptFormats:
          - string
        upstreamTypes:
          - value
          - reference
        uiOrder: 0
      id:
        title: ID
        description: The GitHub organization ID. If both `name` and `id` are provided, `id` takes precedence.
        format: integer
        acceptFormats:
          - integer
        upstreamTypes:
          - value
          - reference
        uiOrder: 1
    required: []
    title: Input
    format: object
  output:
    description: The GitHub organization information.
    properties:
      organization:
        $ref: "#/$defs/organization"
    required: []
    title: Output
    format: object
TASK_GET_PULL_REQUEST:
  shortDescription: Get a pull request from a repository, given the PR number. This will default to the latest PR if no PR number is provided.
  input:
    description: Please input the repository name and owner, and the PR number.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      pr-number:
        default: 0
        title: PR Number
        description: Number of the PR. `0` for the latest PR.
        acceptFormats:
          - integer
        uiOrder: 4
        format: integer
    required:
      - owner
      - repository
    title: Input
    format: object
  output:
    description: The specific pr in GitHub repository.
    uiOrder: 0
    $ref: "#/$defs/pullRequest"
    required: []
    title: Output
    format: object
TASK_GET_USER:
  description: Get a user by name or ID.
  shortDescription: Get a user by name or ID.
  input:
    description: Please input either the username or user ID.
    editOnNodeFields:
      - name
      - id
    properties:
      name:
        title: Name
        description: The GitHub username of the user.
        format: string
        acceptFormats:
          - string
        upstreamTypes:
          - value
          - reference
        uiOrder: 0
      id:
        title: ID
        description: The GitHub user ID. If both `name` and `id` are provided, `id` takes precedence.
        format: integer
        acceptFormats:
          - integer
        upstreamTypes:
          - value
          - reference
        uiOrder: 1
    required: []
    title: Input
    format: object
  output:
    description: The GitHub user information.
    properties:
      user:
        $ref: "#/$defs/user"
    required: []
    title: Output
    format: object
TASK_LIST_ISSUES:
  description: Get the list of all issues in a repository,This can be a pull request or a general issue, and you can tell by the `is-pull-request` field.
  shortDescription: Get the list of all issues in a repository
  input:
    description: Please input the repository name and owner.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      state:
        default: open
        title: State
        description: "State of the issues, can be one of: open, closed, all. Default is open."
        enum:
          - open
          - closed
          - all
        acceptFormats:
          - string
        uiOrder: 10
        format: string
      sort:
        default: created
        title: Sort
        description: Sort the issues by created, updated, popularity, or long-running. Default is created.
        enum:
          - created
          - updated
          - popularity
          - long-running
        acceptFormats:
          - string
        uiOrder: 11
        format: string
      direction:
        default: desc
        title: Direction
        description: "Direction of the sort, can be one of: asc, desc. Default is desc."
        enum:
          - asc
          - desc
        acceptFormats:
          - string
        uiOrder: 12
        format: string
      since:
        default: "2021-01-01"
        title: Since
        description: Date (in `YYYY-MM-DD` format) from which issues will start to be fetched. The date will be in the UTC timezone.
        acceptFormats:
          - string
        uiOrder: 13
        format: string
      no-pull-request:
        title: No Pull Request
        description: Whether to `not` include pull requests in the response. Since issue and pr use the same indexing system in GitHub, the API returns
          all relevant objects (issues and pr). Default is false.
        acceptFormats:
          - boolean
        uiOrder: 14
        format: boolean
      page:
        default: 1
        description: Page number of the results to fetch. Default is 1.
        uiOrder: 100
        title: Page
        acceptFormats:
          - integer
        format: integer
      per-page:
        default: 30
        description: Number of results to fetch per page. Default is 30.
        uiOrder: 101
        title: Per Page
        acceptFormats:
          - integer
        format: integer
    required:
      - owner
      - repository
    title: Input
    format: object
  output:
    description: All issues in GitHub repository.
    uiOrder: 0
    properties:
      issues:
        description: An array of issues.
        uiOrder: 1
        title: Issues
        items:
          $ref: "#/$defs/issue"
          required: []
          description: An issue in GitHub.
        format: array
    required:
      - issues
    title: Output
    format: object
TASK_LIST_PULL_REQUESTS:
  shortDescription: Get the list of all pull requests in a repository
  description: Get the list of all pull requests in a repository. Detailed information about each commit in a PR is omitted, please use the `Get Commit`
    task or the `Get Pull Request` task to get the details of a commit.
  input:
    description: Please input the repository name and owner.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      state:
        default: open
        title: State
        description: State of the PRs, including open, closed, all. Default is open.
        enum:
          - open
          - closed
          - all
        acceptFormats:
          - string
        uiOrder: 10
        format: string
      sort:
        default: created
        title: Sort
        description: Sort the PRs by created, updated, popularity, or long-running. Default is created.
        enum:
          - created
          - updated
          - popularity
          - long-running
        acceptFormats:
          - string
        uiOrder: 11
        format: string
      direction:
        default: desc
        title: Direction
        description: Direction of the sort, including asc or desc. Default is desc.
        enum:
          - asc
          - desc
        acceptFormats:
          - string
        uiOrder: 12
        format: string
      page:
        default: 1
        description: Page number of the results to fetch. Default is 1.
        uiOrder: 100
        title: Page
        acceptFormats:
          - integer
        format: integer
      per-page:
        default: 30
        description: Number of results to fetch per page. Default is 30.
        uiOrder: 101
        title: Per Page
        acceptFormats:
          - integer
        format: integer
    required:
      - owner
      - repository
    title: Input
    format: object
  output:
    description: All PRs in GitHub repository.
    uiOrder: 0
    properties:
      pull-requests:
        description: An array of PRs.
        title: Pull Requests
        uiOrder: 1
        items:
          $ref: "#/$defs/pullRequest"
          required: []
          description: A pull request in GitHub.
        format: array
    required:
      - pull-requests
    title: Output
    format: object
TASK_LIST_REVIEW_COMMENTS:
  shortDescription: Get the review comments in a pull request
  description: Get the review comments in a pull request. The comments can be on a specific line or on the PR as a whole.
  input:
    description: Please input the repository name and owner, and the PR number. Set PR number as`0` to get all comments on all PRs in the repository.
    uiOrder: 0
    properties:
      $ref: "#/$defs/repositoryInfo"
      pr-number:
        default: 0
        title: PR Number
        description: Number of the PR. Default is `0`, which retrieves all comments on all PRs in the repository.
        acceptFormats:
          - integer
        uiOrder: 4
        format: integer
      sort:
        default: created
        title: Sort
        description: Sort the comments by created, updated. Default is created.
        enum:
          - created
          - updated
        acceptFormats:
          - string
        uiOrder: 11
        format: string
      direction:
        default: desc
        title: Direction
        description: Direction of the sort, including asc or desc. Default is desc.
        enum:
          - asc
          - desc
        acceptFormats:
          - string
        uiOrder: 12
        format: string
      since:
        default: "2021-01-01"
        title: Since
        description: Date (in `YYYY-MM-DD` format) from which comments will start to be fetched. The date will be in the UTC timezone.
        acceptFormats:
          - string
        uiOrder: 13
        format: string
      page:
        default: 1
        description: Page number of the results to fetch. Default is 1.
        uiOrder: 100
        title: Page
        acceptFormats:
          - integer
        format: integer
      per-page:
        default: 30
        description: Number of results to fetch per page. Default is 30.
        uiOrder: 101
        title: Per Page
        acceptFormats:
          - integer
        format: integer
    required:
      - owner
      - repository
    title: Input
    format: object
  output:
    description: Comments in the PR.
    uiOrder: 0
    properties:
      comments:
        description: An array of comments.
        uiOrder: 0
        title: Comments
        items:
          $ref: "#/$defs/reviewComments"
          required: []
          uiOrder: 1
          description: Comments in the PR.
        format: array
    required:
      - comments
    title: Output
    format: object
