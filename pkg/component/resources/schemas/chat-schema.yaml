$defs:
  instill-types:
    input:
      title: Chat Input
      description: The chat input to the model.
      type: object
      required: [prompt]
      properties:
        stream:
          title: Stream
          description: Whether to incrementally stream the response using server-sent events (SSE).
          type: boolean
          uiOrder: 0
        prompt:
          title: Prompt
          description: The main text instruction or query for the model.
          type: string
          uiOrder: 1
        images:
          title: Images
          description: URI references or base64 content of input images.
          type: array
          items:
            type: string
          uiOrder: 2
        documents:
          title: Documents
          description: URI references or base64 content of input documents. Different vendors might have different constraints on the document format. For example, Gemini supports only PDF.
          type: array
          items:
            type: string
          uiOrder: 3
        system-message:
          title: System Message
          description: Instruction to set the assistant's behavior, tone, or persona. Different vendors might name this field differently.
          type: string
          uiOrder: 4
        chat-history:
          title: Chat History
          description: Conversation history, each message includes a role and content.
          type: array
          items:
            $ref: "#/$defs/instill-types/content"
          uiOrder: 5
        max-output-tokens:
          title: Max Output Token
          description: The maximum number of tokens to generate in the model output.
          type: integer
          uiOrder: 6
        temperature:
          title: Temperature
          description: A parameter that controls the randomness and creativity of a large language model's output by adjusting the probability of the next word it chooses. A low temperature (e.g., near 0) produces more deterministic, focused, and consistent text, while a high temperature (e.g., near 1) leads to more creative, random, and varied output.
          type: number
          uiOrder: 7
        top-k:
          title: Top-K
          description: >-
            A text generation parameter that limits the selection of the next token to the K most probable tokens, 
            discarding the rest to control randomness and maintain coherence. By specifying a fixed number of top tokens, 
            `top-k` acts as a "safety net," preventing nonsensical choices, but a small K can also stifle creativity 
            and lead to repetitive outputs. It is often used in conjunction with other parameters like temperature and 
            `top-p` to fine-tune the LLM's output.  Note that OpenAI and Mistral models don't have the `top-k` exposed.
          type: integer
          uiOrder: 8
        top-p:
          title: Top-P
          description: >-
            A parameter, also known as nucleus sampling, that controls the randomness and creativity of 
            the generated text by selecting a dynamic subset of tokens. It works by sorting all possible 
            next tokens by their probability, and then summing their probabilities from highest to lowest 
            until the cumulative sum reaches the specified `top-p` value (a number between 0 and 1).
            The model then randomly selects the next token only from this "nucleus" of high-probability 
            tokens. A higher `top-p` value creates a larger, more diverse set of possible words, leading 
            to more creative and potentially unpredictable output, while a lower `top-p` value restricts 
            the choice to a smaller, more focused set of highly probable words, resulting in more factual 
            and conservative output.
          type: number
          uiOrder: 9
        seed:
          title: Seed
          description: A random seed used to control the stochasticity of text generation to produce repeatable outputs
          type: integer
          uiOrder: 10
    output:
      title: Output
      description: The output generated by the model.
      type: object
      required: [text, usage]
      properties:
        texts:
          title: Texts
          description: The array of texts generated by the model.
          type: array
          items:
            type: string
        usage:
          title: Usage
          description: >-
            Token usage statistics: prompt tokens, completion tokens, total tokens, etc.
          type: object
          additionalProperties: true
    content:
      title: Content
      description: Base structured datatype with producer role and ordered parts.
      type: object
      required: [parts]
      properties:
        role:
          title: Role
          description: The producer of the content. Useful to set for multi-turn conversations, otherwise can be left blank or unset.
          type: string
        parts:
          title: Parts
          description: Parts of the content.
          type: array
          items:
            $ref: "#/$defs/instill-types/part"
    part:
      title: Part
      description: A part of the content, such as text or media, or tool call/response.
      type: object
      properties:
        thought:
          title: Thought
          description: Indicates if the part is a thought from the model.
          type: boolean
        thought-signature:
          title: Thought Signature
          description: Opaque signature for the thought (base64-encoded bytes).
          type: string
        video-metadata:
          title: Video Metadata
          description: Optional video metadata (only with blob or fileData video content).
          $ref: "#/$defs/instill-types/video-metadata"
      oneOf:
        - title: Text
          type: object
          required: [text]
          properties:
            text:
              title: Text
              description: Inline text content.
        - properties:
            blob:
              $ref: "#/$defs/instill-types/blob"
        - properties:
            function-call:
              $ref: "#/$defs/instill-types/function-call"
        - properties:
            function-response:
              $ref: "#/$defs/instill-types/function-response"
        - properties:
            file-data:
              $ref: "#/$defs/instill-types/file-data"
        - properties:
            executable-code:
              $ref: "#/$defs/instill-types/executable-code"
        - properties:
            code-execution-result:
              $ref: "#/$defs/instill-types/code-execution-result"
    blob:
      title: Blob
      description: Raw media bytes. Text should use the 'text' field instead.
      type: object
      required: [mimeType, data]
      properties:
        mimeType:
          title: MIME Type
          description: IANA MIME type of the source data (e.g., image/png, image/jpeg).
          type: string
        data:
          title: Data (base64)
          description: Base64-encoded raw bytes for media formats.
          type: string
    function-call:
      title: Function Call
      description: Predicted function call with name and arguments.
      type: object
      required: [name]
      properties:
        id:
          title: ID
          description: Optional unique id of the function call.
          type: string
        name:
          title: Name
          description: Required function name.
          type: string
        args:
          title: Args
          description: Optional function parameters/values as a JSON object.
          type: object
          additionalProperties: true
    function-response:
      title: Function Response
      description: Result of a function call with name and structured response.
      type: object
      required: [name, response]
      properties:
        id:
          title: ID
          description: Optional id of the function call this response is for.
          type: string
        name:
          title: Name
          description: Required function name.
          type: string
        response:
          title: Response
          description: Required function response as a JSON object.
          type: object
          additionalProperties: true
        willContinue:
          title: Will Continue
          description: Whether the function call continues (generator style).
          type: boolean
        scheduling:
          title: Scheduling
          description: How the response should be scheduled (only for non-blocking calls).
          type: string
    file-data:
      title: File Data
      description: URI-based data reference with MIME type.
      type: object
      required: [mimeType, uri]
      properties:
        mimeType:
          title: MIME Type
          description: IANA MIME type of the referenced data.
          type: string
        uri:
          title: URI
          description: URI of the file stored via Files API or external URL.
          type: string
    executable-code:
      title: Executable Code
      description: Code generated by the model intended to be executed.
      type: object
      additionalProperties: true
    code-execution-result:
      title: Code Execution Result
      description: Result of executing the generated code.
      type: object
      additionalProperties: true
    video-metadata:
      title: Video Metadata
      description: Optional video metadata for video content parts.
      type: object
      additionalProperties: true
