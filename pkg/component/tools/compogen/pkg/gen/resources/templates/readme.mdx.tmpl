---
title: "{{ .Title }}"
lang: "en-US"
draft: {{ .IsDraft }}
description: "Learn about how to set up a {{ .Title }} component https://github.com/instill-ai/instill-core"
---

The {{ .Title }} component is {{ .ComponentType.IndefiniteArticle }} {{ .ComponentType }} component that allows users to {{ firstToLower .Description }}
It can carry out the following tasks:
{{- range .Tasks }}
- [{{ .Title }}](#{{ asAnchor .Title}}){{- end }}

{{ loadExtraContent "intro" }}

## Release Stage

`{{ .ReleaseStage.String }}`

{{ loadExtraContent "release" }}

## Configuration

The component definition and tasks are defined in the [definition.yaml]({{ .SourceURL }}/config/definition.yaml) and [tasks.yaml]({{ .SourceURL }}/config/tasks.yaml) files respectively.

{{ loadExtraContent "config" }}

{{ if or .SetupConfig.Prerequisites .SetupConfig.Properties }}
## Setup
{{ with .SetupConfig.Prerequisites}}
<InfoBlock type="info" title="Prerequisites">{{ . }}</InfoBlock>
{{- end }}
{{ $vendor := .Vendor }}
{{- with .SetupConfig.Properties }}
In order to communicate with {{ if $vendor }}{{ $vendor }}{{ else }}the
external application{{ end }}, the following connection details need to be
provided. You may specify them directly in a pipeline recipe as key-value pairs
within the component's `setup` block, or you can create a **Connection** from
the [**Integration Settings**](https://docs.instill-ai.com/docs/set-up-component)
page and reference the whole `setup` as `setup:
${connection.<my-connection-id>}`.

<div class="markdown-col-no-wrap" data-col-1 data-col-2>

| Field | Field ID | Type | Note |
| :--- | :--- | :--- | :--- |
{{- range . }}
| {{ anchorSetup . }}{{ if .Required }} (required){{- end }} | `{{ .ID }}` | {{ if .Enum }}{{ .Type }}{{ enumValues .Enum }}{{ else }}{{ .Type }}{{ end }} | {{ .Description }} |
{{- end }}
{{- end }}

</div>

{{ loadExtraContent "setup" }}
{{- end }}
{{ if .SetupConfig.OneOf -}}
{{- range $key, $options := .SetupConfig.OneOf -}}
<details>
<summary>The <code>{{ $key }}</code> Object </summary>

{{ insertHeaderByObjectKey $key "setup" }}

`{{ $key }}` must fulfill one of the following schemas:
{{- range $idx, $option := $options }}

{{ insertHeaderByConstValue $option "setup" }}

<div class="markdown-col-no-wrap" data-col-1 data-col-2>

| Field | Field ID | Type | Note |
| :--- | :--- | :--- | :--- |
{{- range $propKey, $prop := $option.Properties }}
| {{ anchorSetup $prop }} | `{{ $propKey }}` | {{ if $prop.Enum }}{{ $prop.Type }}{{ enumValues $prop.Enum }}{{ else }}{{ $prop.Type }}{{ end }} | {{ if $prop.Const }} Must be `"{{ $prop.Const }}"` {{ else }} {{ $prop.Description }}  {{- end }} |
{{- end }}
</div>
{{- end }}
</details>
{{- end }}
{{- end }}

{{ if .Tasks }}
## Supported Tasks
{{- end }}
{{ range $i, $task := .Tasks}}
### {{ $task.Title }}
{{ with $task.Description }}
{{ . }}
{{- end }}
{{ if $task.Input }}
<h4 id="{{ asAnchor $task.Title }}-input">Input</h4>
<div class="markdown-col-no-wrap" data-col-1 data-col-2>

| Field | Field ID | Type | Description |
| :--- | :--- | :--- | :--- |
| Task ID (required) | `task` | string | `{{ $task.ID }}` |
{{- range $task.Input }}
| {{ anchorTaskObject . $task }}{{ if .Required }} (required){{ end }} | `{{ .ID }}` | {{ typeWithEnum . $task }} | {{ .Description }} |
{{- end }}
</div>
{{- end }}

{{ if $task.Output -}}
<h4 id="{{ asAnchor $task.Title }}-output">Output</h4>
<div class="markdown-col-no-wrap" data-col-1 data-col-2>

| Field | Field ID | Type | Description |
| :--- | :--- | :--- | :--- |
{{- range $task.Output }}
| {{ anchorTaskObject . $task }}{{ if not .Required }} (optional){{- end }} | `{{ .ID }}` | {{ typeWithRef . $task }} | {{ .Description }} |
{{- end }}
</div>
{{- end }}
{{ if $task.AllObjects }}
<details>
<summary> Referenced Objects</summary>
{{- range $idx, $objectSchemaMap := $task.AllObjects }}
{{- range $key := sortedKeys $objectSchemaMap $task }}
{{- $schema := index $objectSchemaMap $key }}
{{ insertHeaderWithParents $key (getParents $key $task "") $task }}
{{ with $schema.Description }}
{{ . }}
{{ end }}
{{ renderObjectDetailsWithKey $key $schema $task }}
{{- end }}
{{- end }}
</details>
{{ end }}
{{ loadExtraContent $task.ID -}}
{{- end }}

{{ loadExtraContent "bottom" -}}
