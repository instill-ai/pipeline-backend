$defs:
  multi-modal-content:
    items:
      properties:
        image-url:
          properties:
            url:
              description: Either a URL of the image or the base64 encoded image data.
              title: URL
              uiOrder: 0
              type: string
          required:
            - url
          title: Image URL
          description: The image URL.
          uiOrder: 0
          type: object
        text:
          description: The text content.
          title: Text
          uiOrder: 1
          type: string
        type:
          description: The type of the content part.
          enum:
            - text
            - image_url
          title: Type
          uiOrder: 2
          type: string
      required:
        - type
      type: object
    type: array
  chat-message:
    properties:
      content:
        $ref: "#/$defs/multi-modal-content"
        description: The message content.
        uiOrder: 1
        title: Content
      role:
        description: The message role, i.e. 'system', 'user' or 'assistant'.
        uiOrder: 0
        title: Role
        type: string
    required:
      - role
      - content
    title: Chat Message
    type: object
  common:
    description: Input.
    uiOrder: 0
    properties:
      image-base64:
        description: Image base64.
        type: image
        uiOrder: 2
        title: Image
      model-name:
        description: The Instill Model model to be used.
        type: string
        uiOrder: 0
        title: Model Name
    required:
      - image-base64
      - model-name
    title: Input
    type: object
  citation:
    properties:
      start:
        description: The start position of the citation.
        type: integer
        uiOrder: 0
        title: Start
      end:
        description: The end position of the citation.
        type: integer
        uiOrder: 1
        title: End
      text:
        description: The text body of the citation.
        type: string
        uiOrder: 2
        title: Text
    required:
      - start
      - end
      - text
    title: Citation
    type: object
  command-usage:
    description: Token Usage on the Cohere Platform Command Models.
    uiOrder: 1
    properties:
      input-tokens:
        description: The input tokens used by Cohere Models.
        uiOrder: 2
        title: Input Tokens
        type: number
      output-tokens:
        description: The output tokens generated by Cohere Models.
        uiOrder: 3
        title: Output Tokens
        type: number
    required:
      - input-tokens
      - output-tokens
    title: Usage
    type: object
  rerank-usage:
    description: Search Usage on the Cohere Platform Rerank Models.
    uiOrder: 1
    properties:
      search-counts:
        description: The search count used by Cohere Models.
        uiOrder: 1
        title: Search Counts
        type: number
    required:
      - search-counts
    title: Usage
    type: object
  embed-usage:
    description: Token usage on the Cohere platform embed models.
    uiOrder: 1
    properties:
      tokens:
        description: The token count used by Cohere Models.
        uiOrder: 1
        title: Token Count
        type: number
    required:
      - tokens
    title: Usage
    type: object
TASK_TEXT_GENERATION_CHAT:
  shortDescription: Provide text outputs in response to text inputs.
  description: >-
    Cohere's text generation models (often called generative pre-trained transformers or large language models) have been trained to understand
    natural language, code, and images. The models provide text outputs in response to their inputs. The inputs to these models are also referred to as
    "prompts". Designing a prompt is essentially how you "program" a large language model model, usually by providing instructions or some examples of how
    to successfully complete a task.
  input:
    description: Input.
    uiOrder: 0
    properties:
      chat-history:
        description: >-
          Incorporate external chat history, specifically previous messages within the conversation. Each message should adhere to the format:
          : {"role": "The message role, i.e. `USER` or `CHATBOT`", "content": "message content"}.
        type: array
        shortdescription: >-
          Incorporate external chat history, specifically previous messages within the conversation. (Note: As for 2024-06-24 Cohere models
          are not multimodal, so images will be ignored.)
        uiOrder: 4
        items:
          $ref: "#/$defs/chat-message"
        title: Chat history
      max-new-tokens:
        default: 50
        description: The maximum number of tokens for model to generate (default=50).
        type: integer
        uiOrder: 6
        title: Max New Tokens
      model-name:
        enum:
          - command-r-plus
          - command-r
          - command
          - command-nightly
          - command-light
          - command-light-nightly
        example: command-r-plus
        description: The Cohere command model to be used.
        type: string
        instillCredentialMap:
          values:
            - command-r-plus
            - command-r
            - command
            - command-light
          targets:
            - setup.api-key
        uiOrder: 0
        title: Model Name
      prompt:
        description: The prompt text.
        type: string
        uiOrder: 2
        title: Prompt
      prompt-images:
        description: >-
          The prompt images (Note: As for 2024-06-24 Cohere models are not multimodal, so images will be ignored.).
        type: array
        uiOrder: 3
        items:
          type: string
        title: Prompt Images
      seed:
        default: 42
        description: The seed (default=42).
        type: integer
        uiOrder: 4
        title: Seed
      system-message:
        default: You are a helpful assistant.
        description: >-
          The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide
          specific instructions about how it should behave throughout the conversation. By default, the model's behavior is using a generic message as "You
          are a helpful assistant.".
        type: string
        shortDescription: The system message helps set the behavior of the assistant
        uiOrder: 2
        title: System Message
      temperature:
        default: 0.7
        description: The temperature for sampling (default=0.7).
        type: number
        uiOrder: 5
        title: Temperature
      top-k:
        default: 10
        description: Top k for sampling (default=10).
        type: integer
        uiOrder: 5
        title: Top K
      documents:
        description: The documents to be used for the model, for optimal performance, the length of each document should be less than 300 words.
        type: array
        uiOrder: 3
        items:
          type: string
        title: Documents
    required:
      - prompt
      - model-name
    title: Input
    type: object
  output:
    description: Output.
    uiOrder: 0
    properties:
      text:
        description: Model Output.
        uiOrder: 0
        title: Text
        type: string
      citations:
        description: Citations.
        uiOrder: 1
        type: array
        title: Citations
        items:
          $ref: "#/$defs/citation"
      usage:
        $ref: "#/$defs/command-usage"
        uiOrder: 2
    required:
      - text
    title: Output
    type: object
TASK_TEXT_EMBEDDINGS:
  shortDescription: Turn text into a vector of numbers that capture its meaning, unlocking use cases like semantic search.
  description: An embedding is a list of floating point numbers that captures semantic information about the text that it represents.
  input:
    uiOrder: 0
    properties:
      model-name:
        enum:
          - embed-english-v3.0
          - embed-multilingual-v3.0
          - embed-english-light-v3.0
          - embed-multilingual-light-v3.0
        example: embed-multilingual-v3.0
        description: The Cohere embed model to be used.
        type: string
        instillCredentialMap:
          values:
            - embed-english-v3.0
            - embed-multilingual-v3.0
            - embed-english-light-v3.0
            - embed-multilingual-light-v3.0
          targets:
            - setup.api-key
        uiOrder: 0
        title: Model Name
      text:
        description: The text.
        type: string
        uiOrder: 1
        title: Text
      input-type:
        enum:
          - search_document
          - search_query
          - classification
          - clustering
        example: search_document
        description: Specifies the type of input passed to the model.
        type: string
        uiOrder: 0
        title: Input Type
      embedding-type:
        enum:
          - float
          - int8
          - uint8
          - binary
          - ubinary
        example: float
        description:
          Specifies the return type of embedding, Note that 'binary'/'ubinary' options means the component will return packed unsigned binary
          embeddings. The length of each binary embedding is 1/8 the length of the float embeddings of the provided model.
        type: string
        uiOrder: 0
        title: Embedding Type
    required:
      - text
      - model-name
      - input-type
      - embedding-type
    title: Input
    type: object
  output:
    uiOrder: 0
    properties:
      embedding:
        items:
          title: Embedding
          type: number
        description: Embedding of the input text.
        uiOrder: 0
        title: Embedding
        type: array
      usage:
        $ref: "#/$defs/embed-usage"
    required:
      - embedding
    title: Output
    type: object
TASK_TEXT_RERANKING:
  shortDescription: Sort text inputs by semantic relevance to a specified query.
  description:
    Rerank models sort text inputs by semantic relevance to a specified query. They are often used to sort search results returned from an existing
    search solution.
  input:
    uiOrder: 0
    properties:
      model-name:
        enum:
          - rerank-english-v3.0
          - rerank-multilingual-v3.0
        example: rerank-multilingual-v3.0
        description: The Cohere rerank model to be used.
        type: string
        instillCredentialMap:
          values:
            - rerank-english-v3.0
            - rerank-multilingual-v3.0
          targets:
            - setup.api-key
        uiOrder: 0
        title: Model Name
      query:
        description: The query.
        type: string
        uiOrder: 1
        title: Query
      documents:
        description: The documents to be used for reranking.
        type: array
        uiOrder: 2
        items:
          type: string
        title: Documents
      top-n:
        default: 3
        description: The number of most relevant documents or indices to return. Defaults to the length of the documents (default=3).
        type: integer
        uiOrder: 3
        title: Top N
      max-chunks-per-doc:
        default: 10
        description: The maximum number of chunks to produce internally from a document (default=10).
        type: integer
        uiOrder: 4
        title: Maximum number of chunks per document
    required:
      - query
      - model-name
      - documents
    title: Input
    type: object
  output:
    uiOrder: 0
    properties:
      ranking:
        items:
          title: Documents
          type: string
        description: Reranked documents.
        uiOrder: 0
        title: Reranked documents
        type: array
      usage:
        $ref: "#/$defs/rerank-usage"
      relevance:
        items:
          title: Relevance
          type: number
        description: The relevance scores of the reranked documents.
        uiOrder: 0
        title: Reranked documents relevance
        type: array
    required:
      - ranking
    title: Output
    type: object
