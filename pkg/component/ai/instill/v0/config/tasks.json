{
  "$defs": {
    "chat-message": {
      "properties": {
        "content": {
          "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/multi-modal-content",
          "description": "The message content",
          "instillUIOrder": 1,
          "title": "Content"
        },
        "role": {
          "description": "The message role, i.e. 'system', 'user' or 'assistant'",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "Chat Message",
      "type": "object"
    },
    "common": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "image-base64",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "image-base64": {
          "description": "Image base64",
          "instillAcceptFormats": [
            "image/*"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference"
          ],
          "title": "Image",
          "type": "string"
        },
        "model-name": {
          "description": "The Instill Model model to be used.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        }
      },
      "required": [
        "image-base64",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    }
  },
  "TASK_CLASSIFICATION": {
    "instillShortDescription": "Classify images into predefined categories.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/classification",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DETECTION": {
    "instillShortDescription": "Detect and localize multiple objects in images.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/detection",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_INSTANCE_SEGMENTATION": {
    "instillShortDescription": "Detect, localize and delineate multiple objects in images.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/instance-segmentation",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_KEYPOINT": {
    "instillShortDescription": "Detect and localize multiple keypoints of objects in images.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/keypoint",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_OCR": {
    "instillShortDescription": "Detect and recognize text in images.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/ocr",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_SEMANTIC_SEGMENTATION": {
    "instillShortDescription": "Classify image pixels into predefined categories.",
    "input": {
      "$ref": "#/$defs/common",
      "type": "object"
    },
    "output": {
      "$ref": "https://raw.githubusercontent.com/instill-ai/component/467caa4c05cf75d88e2036555529ecf6aa163b5c/resources/schemas/schema.json#/$defs/instill-types/semantic-segmentation",
      "description": "Output",
      "instillUIOrder": 0,
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_GENERATION": {
    "instillShortDescription": "Generate texts from input text prompts.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "prompt",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "max-new-tokens": {
          "default": 50,
          "description": "The maximum number of tokens for model to generate",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Max New Tokens",
          "type": "integer"
        },
        "model-name": {
          "description": "The Instill Model model to be used.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "seed": {
          "description": "The seed",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Seed",
          "type": "integer"
        },
        "system-message": {
          "default": "You are a helpful assistant.",
          "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the modelâ€™s behavior is using a generic message as \"You are a helpful assistant.\"",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The system message helps set the behavior of the assistant",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "System Message",
          "type": "string"
        },
        "temperature": {
          "default": 0.7,
          "description": "The temperature for sampling",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature",
          "type": "number"
        }
      },
      "required": [
        "prompt",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillEditOnNodeFields": [
        "text"
      ],
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "Text",
          "instillFormat": "string",
          "instillUIMultiline": true,
          "instillUIOrder": 0,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_GENERATION_CHAT": {
    "instillShortDescription": "Generate texts from input text prompts and chat history.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "prompt",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "chat-history": {
          "description": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.",
          "instillAcceptFormats": [
            "structured/chat-messages"
          ],
          "instillShortDescription": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "$ref": "#/$defs/chat-message"
          },
          "title": "Chat history",
          "type": "array"
        },
        "max-new-tokens": {
          "default": 50,
          "description": "The maximum number of tokens for model to generate",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Max New Tokens",
          "type": "integer"
        },
        "model-name": {
          "description": "The Instill Model model to be used.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "prompt-images": {
          "description": "The prompt images",
          "instillAcceptFormats": [
            "array:image/*"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Prompt Images",
          "type": "array"
        },
        "seed": {
          "description": "The seed",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Seed",
          "type": "integer"
        },
        "system-message": {
          "default": "You are a helpful assistant.",
          "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the modelâ€™s behavior is using a generic message as \"You are a helpful assistant.\"",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The system message helps set the behavior of the assistant",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "System Message",
          "type": "string"
        },
        "temperature": {
          "default": 0.7,
          "description": "The temperature for sampling",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature",
          "type": "number"
        }
      },
      "required": [
        "prompt",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillEditOnNodeFields": [
        "text"
      ],
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "Text",
          "instillFormat": "string",
          "instillUIMultiline": true,
          "instillUIOrder": 0,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_TO_IMAGE": {
    "instillShortDescription": "Generate images from input text prompts.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "prompt",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "model-name": {
          "description": "The Instill Model model to be used.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "samples": {
          "description": "The number of generated samples, default is 1",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Samples",
          "type": "integer"
        },
        "seed": {
          "description": "The seed, default is 0",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Seed",
          "type": "integer"
        },
        "negative-prompt": {
          "title": "Aspect ratio",
          "type": "string",
          "description": "Keywords of what you do not wish to see in the output image.",
          "instillShortDescription": "Keywords of what you do not wish to see in the output image.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 7
        },
        "aspect-ratio": {
          "title": "Aspect ratio",
          "type": "string",
          "description": "Controls the aspect ratio of the generated image. Defaults to 1:1.",
          "instillShortDescription": "Controls the aspect ratio of the generated image. Defaults to 1:1.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 8,
          "default": "1:1",
          "enum": [
            "16:9",
            "1:1",
            "21:9",
            "2:3",
            "3:2",
            "4:5",
            "5:4",
            "9:16",
            "9:21"
          ]
        }
      },
      "required": [
        "prompt",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillEditOnNodeFields": [
        "images"
      ],
      "instillUIOrder": 0,
      "properties": {
        "images": {
          "description": "Images",
          "instillUIOrder": 0,
          "instillFormat": "array:image/jpeg",
          "items": {
            "instillFormat": "image/jpeg",
            "title": "Image",
            "type": "string"
          },
          "title": "Images",
          "type": "array"
        }
      },
      "required": [
        "images"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_VISUAL_QUESTION_ANSWERING": {
    "instillShortDescription": "Answer questions based on a prompt and an image.",
    "$ref": "#/TASK_TEXT_GENERATION_CHAT"
  },
  "TASK_CHAT": {
    "instillShortDescription": "Generate texts from input text prompts and chat history.",
    "$ref": "#/TASK_TEXT_GENERATION_CHAT"
  },
  "TASK_EMBEDDING": {
    "title": "Embedding",
    "instillShortDescription": "This task refers to the process of generating vector embeddings from input data, which can be text or images. This transformation converts the data into a dense, fixed-length numerical representation that captures the essential features of the original input. These embeddings are typically used in machine learning tasks to represent complex data in a more structured, simplified form.",
    "input": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Embedding Input",
      "description": "Input schema of the embedding task.",
      "instillShortDescription": "Input schema of the embedding task.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Input data.",
          "instillShortDescription": "Input data.",
          "type": "object",
          "properties": {
            "model": {
              "description": "The model to be used for generating embeddings. It should be `namespace/model-name/version`. i.e. `abrc/yolov7-stomata/v0.1.0`. You can see the version from the Versions tab of Model page.",
              "instillShortDescription": "The model to be used.",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUIOrder": 0,
              "title": "Model",
              "type": "string"
            },
            "embeddings": {
              "title": "Embeddings",
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "text": {
                        "title": "Text Content",
                        "description": "When the input is text, the raw text is tokenized and processed into a dense, fixed-length vector that captures semantic information such as word meanings and relationships. These text embeddings enable tasks like sentiment analysis, search, or classification.",
                        "instillShortDescription": "Text content.",
                        "instillAcceptFormats": [
                          "string"
                        ],
                        "type": "string",
                        "instillUIOrder": 1
                      },
                      "type": {
                        "title": "Text",
                        "description": "Text input content type.",
                        "instillShortDescription": "Text input content type.",
                        "instillAcceptFormats": [
                          "string"
                        ],
                        "type": "string",
                        "const": "text",
                        "instillUIOrder": 0
                      }
                    },
                    "title": "Text",
                    "required": [
                      "text",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "image-url": {
                        "title": "Image URL",
                        "description": "When the input is an image from a URL, the image is first fetched from the URL and then decoded into its original format. It is then processed into a fixed-length vector representing essential visual features like shapes and colors. These image embeddings are useful for tasks like image classification or similarity search, providing structured numerical data for complex visual inputs.",
                        "instillShortDescription": "Image content URL.",
                        "instillAcceptFormats": [
                          "string"
                        ],
                        "type": "string",
                        "instillUIOrder": 1
                      },
                      "type": {
                        "title": "Image URL",
                        "description": "Image URL input content type",
                        "instillShortDescription": "Image URL input content type",
                        "instillAcceptFormats": [
                          "string"
                        ],
                        "type": "string",
                        "const": "image-url",
                        "instillUIOrder": 0
                      }
                    },
                    "title": "Image URL",
                    "required": [
                      "image-url",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "image-base64": {
                        "title": "Image File",
                        "description": "When the input is an image in base64 format, the base64-encoded data is first decoded into its original image form. The image is then processed and transformed into a dense, fixed-length numerical vector, capturing key visual features like shapes, colors, or textures.",
                        "instillShortDescription": "Image file input.",
                        "instillAcceptFormats": [
                          "image/*"
                        ],
                        "type": "string",
                        "instillUIOrder": 1
                      },
                      "type": {
                        "title": "Image File",
                        "description": "Image file input content type.",
                        "instillShortDescription": "Image file input content type.",
                        "instillAcceptFormats": [
                          "string"
                        ],
                        "type": "string",
                        "const": "image-base64",
                        "instillUIOrder": 0
                      }
                    },
                    "title": "Image Base64",
                    "required": [
                      "image-base64",
                      "type"
                    ]
                  }
                ],
                "title": "Embedding",
                "description": "Input data to be embedded.",
                "instillUIOrder": 0,
                "required": [
                  "type"
                ]

              },
              "description": "List of input data to be embedded.",
              "instillUIOrder": 1
            }
          },
          "required": [
            "model",
            "embeddings"
          ],
          "instillUIOrder": 0,
          "title": "Data"
        },
        "parameter": {
          "description": "Input parameter.",
          "instillShortDescription": "Input parameter.",
          "type": "object",
          "properties": {
            "format": {
              "title": "Data Format",
              "type": "string",
              "description": "The data format of the embeddings. Defaults to float.",
              "instillShortDescription": "Data format",
              "instillAcceptFormats": [
                "string"
              ],
              "enum": [
                "float",
                "base64"
              ],
              "default": "float",
              "instillUIOrder": 0
            },
            "dimensions": {
              "title": "Dimensions",
              "type": "integer",
              "description": "Number of dimensions in the output embedding vectors.",
              "instillShortDescription": "Number of dimensions",
              "instillAcceptFormats": [
                "integer"
              ],
              "default": 512,
              "instillUIOrder": 1
            },
            "input-type": {
              "title": "Input Type",
              "type": "string",
              "description": "The type of input data to be embedded (e.g., query, document).",
              "instillShortDescription": "Type of input data",
              "instillAcceptFormats": [
                "string"
              ],
              "instillUIOrder": 2
            },
            "truncate": {
              "title": "Truncate",
              "type": "string",
              "description": "How to handle inputs longer than the max token length. Defaults to 'End'.",
              "instillShortDescription": "Truncation handling",
              "instillAcceptFormats": [
                "string"
              ],
              "enum": [
                "None",
                "End",
                "Start"
              ],
              "default": "End",
              "instillUIOrder": 3
            }
          },
          "title": "Parameter",
          "instillUIOrder": 1,
          "required": []
        }
      },
      "required": [
        "data"
      ]
    },
    "output": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Embedding Output",
      "description": "Output schema of the embedding task.",
      "instillShortDescription": "Output schema of the embedding task.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Output data.",
          "instillShortDescription": "Output data.",
          "type": "object",
          "properties": {
            "embeddings": {
              "title": "Embeddings",
              "type": "array",
              "description": "List of generated embeddings.",
              "instillShortDescription": "List of embeddings.",
              "instillFormat": "array",
              "items": {
                "type": "object",
                "properties": {
                  "index": {
                    "title": "Index",
                    "type": "integer",
                    "description": "The index of the embedding vector in the array.",
                    "instillShortDescription": "Index in the array",
                    "instillFormat": "integer",
                    "instillUIOrder": 0
                  },
                  "vector": {
                    "title": "Embedding Vector",
                    "type": "array",
                    "description": "The embedding vector.",
                    "instillShortDescription": "Embedding vector.",
                    "instillFormat": "array",
                    "items": {
                      "type": "number"
                    },
                    "instillUIOrder": 1
                  },
                  "created": {
                    "title": "Created",
                    "type": "integer",
                    "description": "The Unix timestamp (in seconds) of when the embedding was created.",
                    "instillShortDescription": "Timestamp of creation",
                    "instillFormat": "integer",
                    "instillUIOrder": 2
                  }
                },
                "required": [
                  "index",
                  "vector",
                  "created"
                ]
              },
              "instillUIOrder": 0
            }
          },
          "required": [
            "embeddings"
          ],
          "instillUIOrder": 0,
          "title": "Data"
        }
      },
      "required": [
        "data"
      ]
    }
  }
}
