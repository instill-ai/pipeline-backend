$defs:
  multi-modal-content:
    items:
      properties:
        image-url:
          properties:
            url:
              description: Either a URL of the image or the base64 encoded image data.
              title: URL
              uiOrder: 0
              format: string
          required:
            - url
          title: Image URL
          description: The image URL.
          uiOrder: 0
          format: object
        text:
          description: The text content.
          title: Text
          uiOrder: 1
          format: string
        type:
          description: The type of the content part.
          enum:
            - text
            - image_url
          title: Type
          uiOrder: 2
          format: string
      required:
        - type
      format: object
    format: array
  chat-message:
    properties:
      content:
        $ref: '#/$defs/multi-modal-content'
        description: The message content.
        uiOrder: 1
        title: Content
      role:
        description: The message role, i.e. 'system', 'user' or 'assistant'.
        uiOrder: 0
        title: Role
        format: string
    required:
      - role
      - content
    title: Chat Message
    format: object
  chat-usage:
    description: Token usage on the Fireworks AI platform text generation models.
    uiOrder: 1
    properties:
      input-tokens:
        description: The input tokens used by Fireworks AI models.
        uiOrder: 2
        title: Input Tokens
        format: number
      output-tokens:
        description: The output tokens generated by Fireworks AI models.
        uiOrder: 3
        title: Output Tokens
        format: number
    required:
      - input-tokens
      - output-tokens
    title: Usage
    format: object
  embedding-usage:
    description: Token usage on the Fireworks AI platform embedding models.
    uiOrder: 1
    properties:
      tokens:
        description: The token count used by Fireworks AI models.
        uiOrder: 1
        title: Token Count
        format: number
    required:
      - tokens
    title: Usage
    format: object
TASK_TEXT_GENERATION_CHAT:
  shortDescription: Provide text outputs in response to text inputs.
  description: Fireworks AI's text generation models (often called generative pre-trained transformers or large language models) have been trained to understand
    natural language, code, and images. The models provide text outputs in response to their inputs. The inputs to these models are also referred to as
    "prompts". Designing a prompt is essentially how you “program” a large language model model, usually by providing instructions or some examples of how
    to successfully complete a task.
  input:
    description: Input.
    uiOrder: 0
    properties:
      chat-history:
        description: 'Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be
          ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {"role": "The message role, i.e.
          ''system'', ''user'' or ''assistant''", "content": "message content"}.'
        acceptFormats:
          - object
        shortDescription: 'Incorporate external chat history, specifically previous messages within the conversation. (Note: According to Fireworks AI documentation
          on 2024-07-24, the total number of images included in a single API request should not exceed 30, and all the images should be smaller than 5MB
          in size)'
        uiOrder: 4
        items:
          $ref: '#/$defs/chat-message'
        title: Chat history
        format: array
      max-new-tokens:
        default: 50
        description: The maximum number of tokens for model to generate.
        acceptFormats:
          - integer
        uiOrder: 6
        title: Max New Tokens
        format: integer
      model:
        enum:
          - llama-v3p1-405b-instruct
          - llama-v3p1-70b-instruct
          - llama-v3p1-8b-instruct
          - llama-v3-70b-instruct
          - llama-v3-8b-instruct
          - firellava-13b
          - firefunction-v2
          - deepseek-coder-v2-instruct
          - deepseek-coder-v2-lite-instruct
          - starcoder-16b
          - starcoder-7b
          - phi-3-vision-128k-instruct
          - qwen2-72b-instruct
          - mythomax-l2-13b
          - yi-large
        example: llama-v3p1-8b-instruct
        description: The OSS model to be used.
        acceptFormats:
          - string
        uiOrder: 0
        instillCredentialMap:
          values:
            - llama-v3p1-405b-instruct
            - llama-v3p1-70b-instruct
            - llama-v3p1-8b-instruct
            - llama-v3-70b-instruct
            - llama-v3-8b-instruct
            - firellava-13b
            - firefunction-v2
            - deepseek-coder-v2-lite-instruct
            - starcoder-16b
            - starcoder-7b
            - phi-3-vision-128k-instruct
            - qwen2-72b-instruct
            - mythomax-l2-13b
            - yi-large
          targets:
            - setup.api-key
        title: Model Name
        format: string
      prompt:
        description: The prompt text.
        acceptFormats:
          - string
        uiOrder: 2
        title: Prompt
        format: string
      prompt-images:
        description: 'The prompt images (Note: According to Fireworks AI documentation on 2024-07-24, the total number of images included in a single API
          request should not exceed 30, and all the images should be smaller than 5MB in size).'
        acceptFormats:
          - array
        uiOrder: 3
        items:
          format: string
        title: Prompt Images
        format: array
      seed:
        description: The seed.
        acceptFormats:
          - integer
        uiOrder: 4
        title: Seed
        format: integer
      system-message:
        default: You are a helpful assistant.
        description: The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide
          specific instructions about how it should behave throughout the conversation. By default, the model’s behavior is set using a generic message
          as "You are a helpful assistant.".
        acceptFormats:
          - string
        shortDescription: The system message helps set the behavior of the assistant
        uiOrder: 2
        title: System Message
        format: string
      temperature:
        default: 0.7
        description: The temperature for sampling.
        acceptFormats:
          - number
        uiOrder: 5
        title: Temperature
        format: number
      top-k:
        default: 10
        description: Integer to define the top tokens considered within the sample operation to create new text.
        acceptFormats:
          - integer
        uiOrder: 5
        title: Top K
        format: integer
      top-p:
        default: 0.5
        description: Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least
          probable until the sum of the probabilities is greater than top-p (default=0.5).
        acceptFormats:
          - number
          - integer
        shortDescription: Float to define the tokens that are within the sample operation of text generation
        uiOrder: 6
        title: Top P
        format: number
    required:
      - prompt
      - model
    title: Input
    format: object
  output:
    description: Output.
    uiOrder: 0
    properties:
      text:
        description: Model Output.
        uiOrder: 0
        title: Text
        format: string
      usage:
        $ref: '#/$defs/chat-usage'
    required:
      - text
    title: Output
    format: object
TASK_TEXT_EMBEDDINGS:
  shortDescription: Turn text into a vector of numbers that capture its meaning, unlocking use cases like semantic search.
  description: An embedding is a list of floating point numbers that captures semantic information about the text that it represents.
  input:
    uiOrder: 0
    properties:
      model:
        enum:
          - nomic-ai/nomic-embed-text-v1.5
          - nomic-ai/nomic-embed-text-v1
          - WhereIsAI/UAE-Large-V1
          - thenlper/gte-large
          - thenlper/gte-base
        example: nomic-ai/nomic-embed-text-v1.5
        description: The OSS embedding model to be used.
        acceptFormats:
          - string
        uiOrder: 0
        title: Model Name
        instillCredentialMap:
          values:
            - nomic-ai/nomic-embed-text-v1.5
            - nomic-ai/nomic-embed-text-v1
            - WhereIsAI/UAE-Large-V1
            - thenlper/gte-large
            - thenlper/gte-base
          targets:
            - setup.api-key
        format: string
      text:
        description: The text.
        acceptFormats:
          - string
        uiOrder: 1
        title: Text
        format: string
    required:
      - text
      - model
    title: Input
    format: object
  output:
    uiOrder: 0
    properties:
      embedding:
        items:
          title: Embedding
          format: number
        description: Embedding of the input text.
        uiOrder: 0
        title: Embedding
        format: array
      usage:
        $ref: '#/$defs/embedding-usage'
    required:
      - embedding
    title: Output
    format: object
