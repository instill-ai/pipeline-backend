{
  "TASK_VECTOR_SEARCH": {
    "instillShortDescription": "Perform a vector search on a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to perform vector similarity search on",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "vector": {
          "description": "An array of dimensions for the vector query.",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Vector",
          "type": "array"
        },
        "limit": {
          "description": "The limit of points, empty for all points",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit Rows",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Limit",
          "type": "integer"
        },
        "payloads": {
          "description": "The payloads to return in the points. If empty then all payloads will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Payloads to be returned, empty for all payloads",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Payloads",
          "minItems": 1,
          "type": "array",
          "items": {
            "title": "Field",
            "type": "string"
          }
        },
        "filter": {
          "description": "The properties filter to be applied to the data with Qdrant filter, please refer to [filter section](https://api.qdrant.tech/api-reference/search/points).",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        },
        "params": {
          "description": "The additional parameters to be passed to the search, please refer to [params section](https://api.qdrant.tech/api-reference/search/points).",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Params",
          "type": "object",
          "required": []
        },
        "min-score": {
          "description": "The minimum score of the points to be returned",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Min Score",
          "type": "number"
        }
      },
      "required": [
        "collection-name",
        "vector",
        "limit"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Vector search status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "result": {
          "description": "Result of the vector search operation",
          "instillUIOrder": 0,
          "title": "Result",
          "type": "object",
          "properties": {
            "ids": {
              "description": "The ids returned from the vector search operation",
              "instillUIOrder": 0,
              "title": "IDs",
              "type": "array",
              "required": [],
              "instillFormat": "array:string",
              "items": {
                "description": "An id of the point",
                "type": "string",
                "example": "c8faa-4b3b-4b3b-4b3b"
              }
            },
            "points": {
              "description": "The points returned from the vector search operation",
              "instillUIOrder": 1,
              "required": [],
              "title": "Points",
              "type": "array",
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Point",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            },
            "vectors": {
              "description": "The vectors returned from the vector search operation",
              "instillUIOrder": 2,
              "title": "Vectors",
              "type": "array",
              "required": [],
              "instillFormat": "array:array",
              "items": {
                "description": "The vector from array vectors",
                "type": "array",
                "instillFormat": "array",
                "required": [],
                "items": {
                  "description": "A dimension of the vector",
                  "example": 0.8167237,
                  "type": "number"
                }
              }
            },
            "metadata": {
              "description": "The metadata returned from the vector search operation",
              "instillUIOrder": 3,
              "title": "Metadata",
              "type": "array",
              "required": [],
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Metadatum",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            }
          },
          "required": []
        }
      },
      "required": [
        "status",
        "result"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_BATCH_UPSERT": {
    "instillShortDescription": "Insert multiple vector points into a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to upsert the point into",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "array-id": {
          "description": "The array of id",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "items": {
            "description": "An id of the point",
            "type": "string",
            "example": 1
          },
          "minItems": 1,
          "title": "Array ID",
          "type": "array"
        },
        "array-metadata": {
          "description": "The array of vector metadata payload",
          "instillAcceptFormats": [
            "array:semi-structured/*",
            "array:semi-structured/json",
            "array:semi-structured/object",
            "array:object"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "minItems": 1,
          "title": "Array Metadata",
          "type": "array",
          "items": {
            "description": "The vector metadata payload",
            "title": "Metadatum",
            "type": "object",
            "required": []
          }
        },
        "array-vector": {
          "description": "The array of vector values",
          "instillAcceptFormats": [
            "array:array"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "items": {
            "description": "An array of dimensions for the vector value",
            "type": "array",
            "instillAcceptFormats": [
              "array:number",
              "array:integer"
            ],
            "items": {
              "description": "A dimension of the vector",
              "example": 0.8167237,
              "type": "number"
            }
          },
          "minItems": 1,
          "title": "Array Vector",
          "type": "array"
        },
        "ordering": {
          "description": "The ordering guarantees of the batch upsert",
          "instillAcceptFormats": [
            "string"
          ],
          "default": "weak",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Ordering",
          "type": "string",
          "enum": [
            "weak",
            "medium",
            "strong"
          ]
        }
      },
      "required": [
        "collection-name",
        "array-id",
        "array-vector"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Batch upsert status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPSERT": {
    "instillShortDescription": "Upsert a vector point into a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to upsert the point into",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the point",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "metadata": {
          "description": "The vector metadata payload",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Metadata",
          "type": "object",
          "required": []
        },
        "vector": {
          "description": "An array of dimensions for the vector value",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Vector",
          "type": "array"
        },
        "ordering": {
          "description": "The ordering guarantees of the batch upsert",
          "instillAcceptFormats": [
            "string"
          ],
          "default": "weak",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Ordering",
          "type": "string",
          "enum": [
            "weak",
            "medium",
            "strong"
          ]
        }
      },
      "required": [
        "collection-name",
        "id",
        "vector"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Upsert status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE": {
    "instillShortDescription": "Delete vector points from a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to delete the object from",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the point",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "filter": {
          "description": "The properties filter to be applied to the data with Qdrant filter, please refer to [filter section](https://api.qdrant.tech/api-reference/points/delete-points).",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        },
        "ordering": {
          "description": "The ordering guarantees of the batch upsert",
          "instillAcceptFormats": [
            "string"
          ],
          "default": "weak",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Ordering",
          "type": "string",
          "enum": [
            "weak",
            "medium",
            "strong"
          ]
        }
      },
      "required": [
        "collection-name"
      ],
      "instillEditOnNodeFields": [
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_COLLECTION": {
    "instillShortDescription": "Create a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to create",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "config": {
          "description": "The configuration of the collection. Please refer to [here](https://api.qdrant.tech/api-reference/collections/create-collection).",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Config",
          "type": "object",
          "required": []
        }
      },
      "required": [
        "collection-name",
        "config"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Create collection status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE_COLLECTION": {
    "instillShortDescription": "Delete a collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name": {
          "description": "The name of the collection to delete",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": [
        "collection-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete collection status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
