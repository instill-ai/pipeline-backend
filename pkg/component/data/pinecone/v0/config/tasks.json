{
  "TASK_QUERY": {
    "instillShortDescription": "Retrieve the ids of the most similar items in a namespace, along with their similarity scores.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "id": {
          "description": "The unique ID of the vector to be used as a query vector. If present, the vector parameter will be ignored.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Query by vector ID instead of by vector",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "reference",
            "template"
          ],
          "title": "ID",
          "type": "string"
        },
        "vector": {
          "description": "An array of dimensions for the query vector.",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "description": "A dimension of the vector.",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Vector",
          "type": "array"
        },
        "top-k": {
          "description": "The number of results to return for each query.",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top K",
          "type": "integer"
        },
        "namespace": {
          "description": "The namespace to query.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Namespace",
          "type": "string"
        },
        "filter": {
          "description": "The filter to apply. You can use vector metadata to limit your search. See more details <a href=\"https://www.pinecone.io/docs/metadata-filtering/\">here</a>.",
          "instillAcceptFormats": [
            "semi-structured/object"
          ],
          "instillShortDescription": "The filter to apply on vector metadata",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference"
          ],
          "order": 1,
          "required": [],
          "title": "Filter",
          "type": "object"
        },
        "min-score": {
          "description": "Exclude results whose score is below this value.",
          "instillAcceptFormats": [
            "number",
            "integer"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Minimum Score",
          "type": "number"
        },
        "include-metadata": {
          "default": false,
          "description": "Indicates whether metadata is included in the response as well as the IDs.",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Include Metadata",
          "type": "boolean"
        },
        "include-values": {
          "default": false,
          "description": "Indicates whether vector values are included in the response.",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillUIOrder": 7,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Include Values",
          "type": "boolean"
        }
      },
      "required": [
        "top-k",
        "vector"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "matches": {
          "description": "The matches returned for the query.",
          "instillUIOrder": 1,
          "items": {
            "properties": {
              "id": {
                "description": "The ID of the matched vector.",
                "instillFormat": "string",
                "instillUIOrder": 0,
                "title": "ID",
                "type": "string"
              },
              "metadata": {
                "description": "Metadata.",
                "instillFormat": "semi-structured/object",
                "instillUIOrder": 3,
                "required": [],
                "title": "Metadata",
                "type": "object"
              },
              "score": {
                "description": "A measure of similarity between this vector and the query vector. The higher the score, the more similar they are.",
                "instillFormat": "number",
                "instillUIOrder": 1,
                "title": "Score",
                "type": "number"
              },
              "values": {
                "description": "Vector data values.",
                "instillUIOrder": 2,
                "instillFormat": "array:number",
                "items": {
                  "description": "Each float value represents one dimension.",
                  "type": "number",
                  "title": "Value",
                  "instillFormat": "number"
                },
                "title": "Values",
                "type": "array"
              }
            },
            "required": [
              "id",
              "score"
            ],
            "title": "Match",
            "type": "object"
          },
          "title": "Matches",
          "type": "array"
        },
        "namespace": {
          "description": "The namespace of the query.",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Namespace",
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "matches"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPSERT": {
    "instillShortDescription": "Writes vectors into a namespace. If a new value is upserted for an existing vector id, it will overwrite the previous value.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "id": {
          "description": "This is the vector's unique id.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "ID",
          "type": "string"
        },
        "metadata": {
          "description": "The vector metadata.",
          "instillAcceptFormats": [
            "semi-structured/object"
          ],
          "instillShortDescription": "The vector metadata",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "order": 1,
          "required": [],
          "title": "Metadata",
          "type": "object"
        },
        "values": {
          "description": "An array of dimensions for the vector to be saved.",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "description": "A dimension of the vector.",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Values",
          "type": "array"
        },
        "namespace": {
          "description": "The namespace to query.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Namespace",
          "type": "string"
        }
      },
      "required": [
        "id",
        "values"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "upserted-count": {
          "description": "Number of records modified or added.",
          "instillFormat": "integer",
          "instillUIOrder": 0,
          "title": "Upserted Count",
          "type": "integer"
        }
      },
      "required": [
        "upserted-count"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_BATCH_UPSERT": {
    "instillShortDescription": "Writes vectors into a namespace in batch. If a new value is upserted for an existing vector id, it will overwrite the previous value.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "ids": {
          "description": "The IDs of the vectors to upsert.",
          "instillUIOrder": 0,
          "instillFormat": "array:string",
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "title": "IDs",
          "type": "array"
        },
        "array-metadata": {
          "instillShortDescription": "The metadata of the vectors to upsert",
          "description": "The metadata of the vectors to upsert.",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "items": {
            "type": "object"
          },
          "instillFormat": "array:semi-structured/object",
          "minItems": 1,
          "title": "Array of Metadata",
          "type": "array"
        },
        "array-values": {
          "description": "The values of the vectors to upsert. The type will be array of array of number.",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "instillFormat": "array:number",
            "instillAcceptFormats": [
              "array:number",
              "array:integer"
            ],
            "type": "array"
          },
          "instillFormat": "array:array:number",
          "instillAcceptFormats": [
            "array:array:number",
            "array:array:integer"
          ],
          "minItems": 1,
          "title": "Array of Values",
          "type": "array"
        },
        "namespace": {
          "description": "The namespace to upsert the vectors into.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Namespace",
          "type": "string"
        }
      },
      "required": [
        "ids",
        "array-values"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 1,
      "properties": {
        "upserted-count": {
          "description": "Number of records modified or added.",
          "instillFormat": "integer",
          "instillUIOrder": 0,
          "title": "Upserted Count",
          "type": "integer"
        }
      },
      "required": [
        "upserted-count"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_RERANK": {
    "instillShortDescription": "Rerank documents, such as text passages, according to their relevance to a query.",
    "description": "Rerank documents, such as text passages, according to their relevance to a query. The input is a list of documents and a query. The output is a list of documents, sorted by relevance to the query.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "query": {
          "description": "The query to rerank the documents.",
          "instillAcceptFormats": [
            "string"
          ],
          "instullUIMultiline": false,
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Query",
          "type": "string"
        },
        "documents": {
          "description": "The documents to rerank.",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "title": "Documents",
          "type": "array"
        },
        "top-n": {
          "description": "The number of results to return sorted by relevance. Defaults to the number of inputs.",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top N",
          "type": "integer"
        }
      },
      "required": [
        "query",
        "documents"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "documents": {
          "description": "Reranked documents.",
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Documents",
            "type": "string"
          },
          "instillUIOrder": 0,
          "title": "Reranked documents.",
          "type": "array"
        },
        "scores": {
          "description": "The relevance score of the documents normalized between 0 and 1.",
          "instillFormat": "array:number",
          "items": {
            "instillFormat": "number",
            "title": "Score",
            "type": "number"
          },
          "instillUIOrder": 1,
          "title": "Scores",
          "type": "array"
        }
      },
      "required": [
        "documents",
        "scores"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
