{
  "TASK_INDEX": {
    "shortDescription": "Index a document into Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        },
        "id": {
          "description": "The ID of the document.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 1,
          "title": "ID",
          "format": "string"
        },
        "data": {
          "description": "Data to be indexed.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 2,
          "title": "Data",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "index-name",
        "data"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Index operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_MULTI_INDEX": {
    "shortDescription": "Index multiple documents into Elasticsearch with bulk API",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        },
        "array-id": {
          "description": "The array of id.",
          "acceptFormats": [
            "array"
          ],
          "uiOrder": 1,
          "items": {
            "description": "An id of the document.",
            "example": 1,
            "format": "string"
          },
          "minItems": 1,
          "title": "Array ID",
          "format": "array"
        },
        "array-data": {
          "description": "Array data to be indexed.",
          "acceptFormats": [
            "array",
            "array",
            "array",
            "array"
          ],
          "uiOrder": 2,
          "title": "Array Data",
          "items": {
            "description": "The data to be inserted.",
            "title": "Data",
            "required": [],
            "format": "object"
          },
          "minItems": 1,
          "format": "array"
        }
      },
      "required": [
        "index-name",
        "array-data"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Index operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_UPDATE": {
    "shortDescription": "Update a document in Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        },
        "id": {
          "description": "The ID of the document.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 1,
          "title": "ID",
          "format": "string"
        },
        "query": {
          "description": "Full text search query for update task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Full text search query, (empty for all documents)",
          "uiOrder": 2,
          "title": "Query",
          "format": "string"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html).",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 3,
          "title": "Filter",
          "required": [],
          "format": "object"
        },
        "filter-sql": {
          "shortDescription": "The filter sql to be applied to the data, if filter or id is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter.",
          "uiOrder": 4,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter SQL",
          "format": "string"
        },
        "update-data": {
          "description": "Update data.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 4,
          "title": "Update",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "index-name",
        "update-data"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Update operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_SEARCH": {
    "shortDescription": "Search for documents in Elasticsearch, support full text search",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 1,
          "title": "Index Name",
          "format": "string"
        },
        "id": {
          "description": "The ID of the document.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 2,
          "title": "ID",
          "format": "string"
        },
        "query": {
          "description": "Full text search query for search task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Full text search query, (empty for all documents)",
          "uiOrder": 3,
          "title": "Query",
          "format": "string"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html).",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 4,
          "title": "Filter",
          "required": [],
          "format": "object"
        },
        "filter-sql": {
          "shortDescription": "The filter sql to be applied to the data, if filter or id is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter.",
          "uiOrder": 5,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter SQL",
          "format": "string"
        },
        "size": {
          "description": "Number of documents to return. If empty then all documents will be returned.",
          "acceptFormats": [
            "integer"
          ],
          "shortDescription": "Size of documents to return, (empty for all documents)",
          "uiOrder": 6,
          "title": "Size",
          "format": "integer"
        },
        "fields": {
          "description": "The fields to return in the documents. If empty then all fields will be returned.",
          "acceptFormats": [
            "array"
          ],
          "shortDescription": "Fields to be returned, empty for all fields",
          "uiOrder": 7,
          "title": "Fields",
          "items": {
            "title": "Field",
            "format": "string"
          },
          "minItems": 1,
          "format": "array"
        },
        "min-score": {
          "description": "Minimum score to consider for search results. If empty then no minimum score will be considered.",
          "acceptFormats": [
            "number"
          ],
          "shortDescription": "Minimum Score",
          "uiOrder": 8,
          "title": "Minimum Score",
          "format": "number"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Search operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        },
        "result": {
          "description": "Result of the search operation.",
          "uiOrder": 1,
          "title": "Result",
          "properties": {
            "ids": {
              "description": "The ids returned from the search operation.",
              "uiOrder": 0,
              "title": "IDs",
              "required": [],
              "items": {
                "description": "An id of the document.",
                "example": "c8faa-4b3b-4b3b-4b3b",
                "format": "string"
              },
              "format": "array"
            },
            "documents": {
              "description": "The documents returned from the search operation.",
              "uiOrder": 1,
              "required": [],
              "title": "Documents",
              "items": {
                "title": "Document",
                "format": "object",
                "required": []
              },
              "format": "array"
            },
            "data": {
              "description": "The data returned from the search operation.",
              "uiOrder": 2,
              "title": "Data",
              "required": [],
              "items": {
                "title": "Datum",
                "format": "object",
                "required": []
              },
              "format": "array"
            }
          },
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "result",
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_VECTOR_SEARCH": {
    "shortDescription": "Search for vector similarity search in Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 1,
          "title": "Index Name",
          "format": "string"
        },
        "field": {
          "description": "Field name of the vector to search for similar vectors.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Field name of the vector",
          "uiOrder": 2,
          "title": "Field",
          "format": "string"
        },
        "query-vector": {
          "description": "Query vector to search for similar vectors.",
          "acceptFormats": [
            "array",
            "array"
          ],
          "shortDescription": "",
          "uiOrder": 3,
          "items": {
            "description": "A dimension of the vector.",
            "example": 0.8167237,
            "format": "number"
          },
          "minItems": 1,
          "title": "Query Vector",
          "format": "array"
        },
        "k": {
          "description": "K of documents to do kNN vector search.",
          "acceptFormats": [
            "integer"
          ],
          "shortDescription": "K of documents to return",
          "uiOrder": 4,
          "title": "K",
          "format": "integer"
        },
        "num-candidates": {
          "description": "Number of candidates to be considered for kNN vector search. Default to 2 times of k.",
          "acceptFormats": [
            "integer"
          ],
          "shortDescription": "Number of candidates to be considered for kNN, default to 2 times of k",
          "uiOrder": 5,
          "title": "Num Candidates",
          "format": "integer"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"filter\" field, please refer to [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/knn-search.html#knn-search-filter-example).",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 6,
          "title": "Filter",
          "required": [],
          "format": "object"
        },
        "filter-sql": {
          "shortDescription": "The filter sql to be applied to the data, if filter or id is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter.",
          "uiOrder": 7,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter SQL",
          "format": "string"
        },
        "fields": {
          "description": "The fields to return in the documents. If empty then all fields will be returned.",
          "acceptFormats": [
            "array"
          ],
          "shortDescription": "Fields to be returned, empty for all fields",
          "uiOrder": 8,
          "title": "Fields",
          "items": {
            "title": "Field",
            "format": "string"
          },
          "minItems": 1,
          "format": "array"
        },
        "min-score": {
          "description": "Minimum score to consider for search results. If empty then no minimum score will be considered.",
          "acceptFormats": [
            "number"
          ],
          "shortDescription": "Minimum Score",
          "uiOrder": 9,
          "title": "Minimum Score",
          "format": "number"
        }
      },
      "required": [
        "index-name",
        "field"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Search operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        },
        "result": {
          "description": "Result of the vector search operation.",
          "uiOrder": 1,
          "title": "Result",
          "properties": {
            "ids": {
              "description": "The ids returned from the vector search operation.",
              "uiOrder": 0,
              "title": "IDs",
              "required": [],
              "items": {
                "description": "An id of the document.",
                "example": "c8faa-4b3b-4b3b-4b3b",
                "format": "string"
              },
              "format": "array"
            },
            "documents": {
              "description": "The documents returned from the vector search operation.",
              "uiOrder": 1,
              "required": [],
              "title": "Documents",
              "items": {
                "title": "Document",
                "format": "object",
                "required": []
              },
              "format": "array"
            },
            "vectors": {
              "description": "The vectors returned from the vector search operation.",
              "uiOrder": 2,
              "title": "Vectors",
              "required": [],
              "items": {
                "description": "The vector from array vectors.",
                "required": [],
                "items": {
                  "description": "A dimension of the vector.",
                  "example": 0.8167237,
                  "format": "number"
                },
                "format": "array"
              },
              "format": "array"
            },
            "metadata": {
              "description": "The metadata returned from the vector search operation.",
              "uiOrder": 3,
              "title": "Metadata",
              "required": [],
              "items": {
                "title": "Metadatum",
                "format": "object",
                "required": []
              },
              "format": "array"
            }
          },
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "result",
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_DELETE": {
    "shortDescription": "Delete documents from Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        },
        "id": {
          "description": "The ID of the document.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 1,
          "title": "ID",
          "format": "string"
        },
        "query": {
          "description": "Full text search query for delete task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Full text search query, (empty for all documents)",
          "uiOrder": 2,
          "title": "Query",
          "format": "string"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html).",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 3,
          "title": "Filter",
          "required": [],
          "format": "object"
        },
        "filter-sql": {
          "shortDescription": "The filter sql to be applied to the data, if filter or id is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter.",
          "uiOrder": 4,
          "acceptFormats": [
            "string"
          ],
          "required": [],
          "title": "Filter SQL",
          "format": "string"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Delete operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_CREATE_INDEX": {
    "shortDescription": "Create an index in Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        },
        "mappings": {
          "description": "Index mappings which starts with {\"mappings\":{\"properties\"}} field, please refer to [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/dense-vector.html) for vector search and [here](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html) for other mappings.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 1,
          "title": "Mappings",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Create index operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_DELETE_INDEX": {
    "shortDescription": "Delete an index in Elasticsearch",
    "input": {
      "uiOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index.",
          "acceptFormats": [
            "string"
          ],
          "uiOrder": 0,
          "title": "Index Name",
          "format": "string"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Delete index operation status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  }
}
