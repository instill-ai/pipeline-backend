{
  "TASK_INSERT": {
    "instillShortDescription": "Perform an insert operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the document",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "data": {
          "description": "The data to be inserted",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Data",
          "type": "object",
          "required": []
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Insert status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_INSERT_MANY": {
    "instillShortDescription": "Perform an insert many operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "array-id": {
          "description": "The array of id",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "items": {
            "description": "An id of the document",
            "type": "string",
            "example": 1
          },
          "minItems": 1,
          "title": "Array ID",
          "type": "array"
        },
        "array-data": {
          "description": "The array data to be inserted",
          "instillAcceptFormats": [
            "array:semi-structured/*",
            "array:semi-structured/json",
            "array:semi-structured/object",
            "array:object"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Data",
          "type": "array",
          "items": {
            "description": "The data to be inserted",
            "title": "Data",
            "type": "object",
            "required": []
          },
          "minItems": 1
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "array-data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Insert many status",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_FIND": {
    "instillShortDescription": "Perform a find operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the document",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "filter": {
          "description": "The filter to find documents, please refer to [the documentations](https://www.mongodb.com/docs/manual/reference/operator/query/). If empty then all documents will be returned",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillShortDescription": "The mongodb language query to filter the documents, empty for no filter",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        },
        "limit": {
          "description": "The number of documents to return. If empty then all documents will be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit the documents, empty for all documents",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Limit",
          "type": "integer"
        },
        "fields": {
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, empty for all fields",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type": "array",
          "items": {
            "title": "Field",
            "type": "string"
          },
          "minItems": 1
        }
      },
      "required": [
        "database-name",
        "collection-name"
      ],
      "instillEditOnNodeFields": [
        "database-name",
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Find status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "result": {
          "description": "Result of the find operation",
          "instillUIOrder": 0,
          "title": "Result",
          "type": "object",
          "properties": {
            "ids": {
              "description": "The ids returned from the find operation",
              "instillUIOrder": 0,
              "title": "IDs",
              "type": "array",
              "required": [],
              "instillFormat": "array:string",
              "items": {
                "description": "An id of the document",
                "type": "string",
                "example": "c8faa-4b3b-4b3b-4b3b"
              }
            },
            "documents": {
              "description": "The documents returned from the find operation",
              "instillUIOrder": 1,
              "required": [],
              "title": "Documents",
              "type": "array",
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Document",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            },
            "data": {
              "description": "The data returned from the find operation",
              "instillUIOrder": 2,
              "title": "Metadata",
              "type": "array",
              "required": [],
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Datum",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            }
          },
          "required": []
        }
      },
      "required": [
        "status",
        "result"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPDATE": {
    "instillShortDescription": "Perform an update operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the document",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "filter": {
          "description": "The filter to update documents, please refer to [the documentations](https://www.mongodb.com/docs/manual/reference/operator/query/). If empty then all documents will be returned",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillShortDescription": "The mongodb language query to filter the documents",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        },
        "update-data": {
          "description": "The updated data to be applied to the documents",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Update",
          "type": "object",
          "required": []
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "update-data"
      ],
      "instillEditOnNodeFields": [
        "database-name",
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Update status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE": {
    "instillShortDescription": "Perform a delete operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "id": {
          "description": "The ID of the document",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "ID",
          "type": "string"
        },
        "filter": {
          "description": "The filter to delete documents, please refer to [the documentations](https://www.mongodb.com/docs/manual/reference/operator/query/). If empty then all documents will be returned",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillShortDescription": "The mongodb language query to filter the documents",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        }
      },
      "required": [
        "database-name",
        "collection-name"
      ],
      "instillEditOnNodeFields": [
        "database-name",
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_COLLECTION": {
    "instillShortDescription": "Delete the collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": [
        "database-name",
        "collection-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete collection status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_DATABASE": {
    "instillShortDescription": "Delete the database",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        }
      },
      "required": [
        "database-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete database status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_SEARCH_INDEX": {
    "instillShortDescription": "Create a search index, only works for M10 or larger clusters",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name": {
          "description": "The name of the index to be created",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "index-type": {
          "description": "The type of the index to be created",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Type",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "enum": [
            "search",
            "vectorSearch"
          ],
          "title": "Index Type",
          "type": "string"
        },
        "syntax": {
          "description": "The syntax structure of the search index, please refer to the MongoDB documentation for more information. search [here](https://www.mongodb.com/docs/atlas/atlas-search/create-index/). vectorSearch [here](https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-type/)",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillShortDescription": "Syntax Structure, please refer to the MongoDB documentation",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Syntax",
          "type": "object",
          "required": []
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-type",
        "index-name",
        "syntax"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Create index status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_SEARCH_INDEX": {
    "instillShortDescription": "Drop a search index, only works for M10 or larger clusters",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name": {
          "description": "The name of the index to be dropped",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete index status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_VECTOR_SEARCH": {
    "instillShortDescription": "Perform a vector search operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "The name of the database in MongoDB",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in MongoDB",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name": {
          "description": "The name of the index to be used for vector search",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query-vector": {
          "description": "The query vector to be used for vector search",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillShortDescription": "Query Vector",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Query Vector",
          "type": "array",
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1
        },
        "exact": {
          "description": "The exact value for vector search. If true, then ENN search will be performed, otherwise ANN search will be performed. Default to false",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillShortDescription": "Exact Search, true for ENN search, false for ANN search",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Exact",
          "type": "boolean",
          "default": false
        },
        "limit": {
          "description": "Limit the documents to be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit Documents",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Limit",
          "type": "integer"
        },
        "num-candidates": {
          "description": "The number of candidates to the field to be used for vector search. Default to 3 times limit",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Number of Candidates, default to 3 times limit",
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Number of Candidates",
          "type": "integer"
        },
        "path": {
          "description": "The path to the field to be used for vector search",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Path, need to first create vectorSearch search index",
          "instillUIOrder": 7,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Path",
          "type": "string"
        },
        "filter": {
          "description": "The filter to be used for vector search, need to first create filter vectorSearch search index, please refer to [the documentations](https://www.mongodb.com/docs/manual/reference/operator/query/). If empty then all documents will be returned to be used for vector search",
          "instillAcceptFormats": [
            "semi-structured/*",
            "object"
          ],
          "instillShortDescription": "The mongodb language query to filter the documents, empty for all documents",
          "instillUIOrder": 8,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter",
          "type": "object",
          "required": []
        },
        "fields": {
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, empty for all fields",
          "instillUIOrder": 9,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type": "array",
          "items": {
            "title": "Field",
            "type": "string"
          },
          "minItems": 1
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-name",
        "query-vector",
        "path",
        "limit"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Vector search status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "result": {
          "description": "Result of the vector search operation",
          "instillUIOrder": 0,
          "title": "Result",
          "type": "object",
          "properties": {
            "ids": {
              "description": "The ids returned from the vector search operation",
              "instillUIOrder": 0,
              "title": "IDs",
              "type": "array",
              "required": [],
              "instillFormat": "array:string",
              "items": {
                "description": "An id of the document",
                "type": "string",
                "example": "c8faa-4b3b-4b3b-4b3b"
              }
            },
            "documents": {
              "description": "The documents returned from the vector search operation",
              "instillUIOrder": 1,
              "required": [],
              "title": "Documents",
              "type": "array",
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Document",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            },
            "vectors": {
              "description": "The vectors returned from the vector search operation",
              "instillUIOrder": 2,
              "title": "Vectors",
              "type": "array",
              "required": [],
              "instillFormat": "array:array",
              "items": {
                "description": "The vector from array vectors",
                "type": "array",
                "instillFormat": "array",
                "required": [],
                "items": {
                  "description": "A dimension of the vector",
                  "example": 0.8167237,
                  "type": "number"
                }
              }
            },
            "metadata": {
              "description": "The metadata returned from the vector search operation",
              "instillUIOrder": 3,
              "title": "Metadata",
              "type": "array",
              "required": [],
              "instillFormat": "array:semi-structured/json",
              "items": {
                "title": "Metadatum",
                "format": "semi-structured/json",
                "type": "object",
                "required": []
              }
            }
          },
          "required": []
        }
      },
      "required": [
        "status",
        "result"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
