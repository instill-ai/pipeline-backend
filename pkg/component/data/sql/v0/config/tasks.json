{
  "TASK_INSERT": {
    "shortDescription": "Perform insert operation",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to insert data into.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "data": {
          "description": "The data to be inserted.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 1,
          "items": {
            "title": "Object",
            "format": "json"
          },
          "title": "Data",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "data",
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Insert status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_INSERT_MANY": {
    "shortDescription": "Perform insert operation with multiple rows",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to insert data into.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "array-data": {
          "description": "The array data to be inserted.",
          "acceptFormats": [
            "array",
            "array",
            "array",
            "array"
          ],
          "uiOrder": 1,
          "title": "Data",
          "items": {
            "description": "The data to be inserted.",
            "title": "Data",
            "required": [],
            "format": "object"
          },
          "minItems": 1,
          "format": "array"
        }
      },
      "required": [
        "array-data",
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Insert many status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_UPDATE": {
    "shortDescription": "Perform update operation",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to update data into.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "filter": {
          "shortDescription": "The filter to be applied to the data",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause.",
          "uiOrder": 1,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter",
          "format": "string"
        },
        "update-data": {
          "description": "The new data to be updated to.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "uiOrder": 2,
          "items": {
            "title": "Object",
            "format": "json"
          },
          "title": "Update",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "filter",
        "update-data",
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Update status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_SELECT": {
    "shortDescription": "Perform select operation",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to be selected.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "filter": {
          "shortDescription": "The filter to be applied to the data. If empty, then all rows will be updated",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for all rows.",
          "uiOrder": 1,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter",
          "format": "string"
        },
        "limit": {
          "description": "The limit of rows to be selected, empty for all rows.",
          "acceptFormats": [
            "integer"
          ],
          "shortDescription": "Limit Rows",
          "uiOrder": 2,
          "title": "Limit",
          "format": "integer"
        },
        "columns": {
          "description": "The columns to return in the rows. If empty then all columns will be returned.",
          "acceptFormats": [
            "array"
          ],
          "shortDescription": "Columns to be returned, empty for all columns",
          "uiOrder": 3,
          "title": "Columns",
          "items": {
            "title": "Column",
            "format": "string"
          },
          "minItems": 1,
          "format": "array"
        }
      },
      "required": [
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "description": "Output.",
      "uiOrder": 0,
      "properties": {
        "rows": {
          "description": "The rows returned from the select operation.",
          "uiOrder": 0,
          "required": [],
          "title": "Rows",
          "items": {
            "title": "Row",
            "required": [],
            "format": "json"
          },
          "format": "array"
        },
        "status": {
          "description": "Select status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status",
        "rows"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_DELETE": {
    "shortDescription": "Perform delete operation",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to be deleted.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "filter": {
          "shortDescription": "The filter to be applied to the data",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause.",
          "uiOrder": 1,
          "acceptFormats": [
            "string"
          ],
          "title": "Filter",
          "format": "string"
        }
      },
      "required": [
        "filter",
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Delete status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_CREATE_TABLE": {
    "shortDescription": "Create a table in the database",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to be created.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        },
        "columns-structure": {
          "description": "The columns structure to be created in the table, json with value string, e.g {\"name\": \"VARCHAR(255)\", \"age\": \"INT not null\"}.",
          "acceptFormats": [
            "json",
            "object"
          ],
          "shortDescription": "Columns Structure, e.g {\"name\": \"VARCHAR(255)\", \"age\": \"INT not null\"}",
          "uiOrder": 1,
          "title": "Columns",
          "required": [],
          "format": "object"
        }
      },
      "required": [
        "table-name",
        "columns-structure"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Create table status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  },
  "TASK_DROP_TABLE": {
    "shortDescription": "Drop a table in the database",
    "input": {
      "uiOrder": 0,
      "properties": {
        "table-name": {
          "description": "The table name in the database to be dropped.",
          "acceptFormats": [
            "string"
          ],
          "shortDescription": "Database Table Name",
          "uiOrder": 0,
          "title": "Table Name",
          "format": "string"
        }
      },
      "required": [
        "table-name"
      ],
      "title": "Input",
      "format": "object"
    },
    "output": {
      "uiOrder": 0,
      "properties": {
        "status": {
          "description": "Drop table status.",
          "required": [],
          "uiOrder": 0,
          "title": "Status",
          "format": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "format": "object"
    }
  }
}
