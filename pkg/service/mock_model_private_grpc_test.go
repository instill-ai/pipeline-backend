// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/instill-ai/protogen-go/vdp/model/v1alpha (interfaces: ModelPrivateServiceClient)

// Package service_test is a generated GoMock package.
package service_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	modelv1alpha "github.com/instill-ai/protogen-go/vdp/model/v1alpha"
	grpc "google.golang.org/grpc"
)

// MockModelPrivateServiceClient is a mock of ModelPrivateServiceClient interface.
type MockModelPrivateServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockModelPrivateServiceClientMockRecorder
}

// MockModelPrivateServiceClientMockRecorder is the mock recorder for MockModelPrivateServiceClient.
type MockModelPrivateServiceClientMockRecorder struct {
	mock *MockModelPrivateServiceClient
}

// NewMockModelPrivateServiceClient creates a new mock instance.
func NewMockModelPrivateServiceClient(ctrl *gomock.Controller) *MockModelPrivateServiceClient {
	mock := &MockModelPrivateServiceClient{ctrl: ctrl}
	mock.recorder = &MockModelPrivateServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelPrivateServiceClient) EXPECT() *MockModelPrivateServiceClientMockRecorder {
	return m.recorder
}

// CheckModel mocks base method.
func (m *MockModelPrivateServiceClient) CheckModel(arg0 context.Context, arg1 *modelv1alpha.CheckModelRequest, arg2 ...grpc.CallOption) (*modelv1alpha.CheckModelResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CheckModel", varargs...)
	ret0, _ := ret[0].(*modelv1alpha.CheckModelResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckModel indicates an expected call of CheckModel.
func (mr *MockModelPrivateServiceClientMockRecorder) CheckModel(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckModel", reflect.TypeOf((*MockModelPrivateServiceClient)(nil).CheckModel), varargs...)
}

// GetModelAdmin mocks base method.
func (m *MockModelPrivateServiceClient) GetModelAdmin(arg0 context.Context, arg1 *modelv1alpha.GetModelAdminRequest, arg2 ...grpc.CallOption) (*modelv1alpha.GetModelAdminResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetModelAdmin", varargs...)
	ret0, _ := ret[0].(*modelv1alpha.GetModelAdminResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetModelAdmin indicates an expected call of GetModelAdmin.
func (mr *MockModelPrivateServiceClientMockRecorder) GetModelAdmin(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModelAdmin", reflect.TypeOf((*MockModelPrivateServiceClient)(nil).GetModelAdmin), varargs...)
}

// ListModelsAdmin mocks base method.
func (m *MockModelPrivateServiceClient) ListModelsAdmin(arg0 context.Context, arg1 *modelv1alpha.ListModelsAdminRequest, arg2 ...grpc.CallOption) (*modelv1alpha.ListModelsAdminResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListModelsAdmin", varargs...)
	ret0, _ := ret[0].(*modelv1alpha.ListModelsAdminResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListModelsAdmin indicates an expected call of ListModelsAdmin.
func (mr *MockModelPrivateServiceClientMockRecorder) ListModelsAdmin(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListModelsAdmin", reflect.TypeOf((*MockModelPrivateServiceClient)(nil).ListModelsAdmin), varargs...)
}

// LookUpModelAdmin mocks base method.
func (m *MockModelPrivateServiceClient) LookUpModelAdmin(arg0 context.Context, arg1 *modelv1alpha.LookUpModelAdminRequest, arg2 ...grpc.CallOption) (*modelv1alpha.LookUpModelAdminResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "LookUpModelAdmin", varargs...)
	ret0, _ := ret[0].(*modelv1alpha.LookUpModelAdminResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookUpModelAdmin indicates an expected call of LookUpModelAdmin.
func (mr *MockModelPrivateServiceClientMockRecorder) LookUpModelAdmin(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookUpModelAdmin", reflect.TypeOf((*MockModelPrivateServiceClient)(nil).LookUpModelAdmin), varargs...)
}
